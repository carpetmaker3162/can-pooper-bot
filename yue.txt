It's the fake Jay.


The audit logs didn't report anything.


Who's kicking people?


GTX 1650 Laptop.


Actually, I don't know.


Not sure how to do that.


He tried to spam me with his bot because I wasn't responding because I was outside.


I deleted the NSFW parts.


Running the program will not show any output.


You know this is C, right?


But can you tell us the fix?


So, can you fix the snippet?


However, it is not done correctly.


The memory is being allocated as expected.


Okay. Here's a C program. It will not work due to a memory allocation problem. What is the problem?
```c
#include <stdio.h>
#include <stdlib.h>

int main()
{
    int* a = malloc(1);
    *a = 10;
    printf("%d\n", *a);
    printf("%p\n", a);
    free(a);
    return 0;
}
```


Are you a programmer?


Well, I guess we just wait until it's added again.


Now you're not.


<@985236179790221312> Share your screen.


Okay hold on.


<@985236179790221312> Where did you find yours?


Okay, I can't seem to find it on PC either.


Actually, I'll check right now.


I'll check later.


My PC isn't available right now.


I'm on mobile so it looks weird.


Where are they?


Let me check.


None have shown up yet.


This is because in my experience, people don't like getting pinged.


The server is setted so that no one can ping `@everyone` except for the Administrators.


Because he's a mean.


RIP Atom.
https://github.blog/2022-06-08-sunsetting-atom/


I removed the "Guest" role since it serves no purpose.


Alright, all the nicknames are gone now.


Which is kind of a lot.


That's the cause of the server's death in the first place.


The server is indeed dead.


In fact everything I've done so far is assigned to myself.


I am constantly assigning work to myself.


So, I have to go and work on confidential stuff.


TMake and Nengine are technically cancelled now that the Li Institution is no longer a thing.


I literally have way too much to do.


Not sure if that's a good thing or a bad thing.


Anyways he's gone now and likely will not come back.


Wasn't he like that before?


I don't know.


So, this is more of a refresh.


I didn't remove everything.


I'm burying the server.


But now it seems like it's just idiomatic syntax sugar.


The only reason I would use with is if the variables are temporary.


What if you call a before trying to print b?


What even is the point of `with`?


Okay, that's good.


Me when I found out Python doesn't have scopes.


Though I have not much experience with PyCharm so this is as much I can tell you.


Both me and Neng just use Visual Studio Code with Python extensions installed.


Most likely not.


Anyways, I think I see your main argument here (though correct me if I'm wrong).

- System programming is harder to do because of the abundance of hidden-variables, which requires the programmer to infer what is happening within their software much more than if you are writing an application, in which there are much fewer hidden-variables.

- It is harder to create innovations in system programming because system programming is mainly influenced by hardware, which does not change much over the years since older systems wants to remain compatible without completely rewriting the code, whereas application programming is heavily influenced by culture, which changes a lot.

I generally agree with both of them, though there's a few things I would like to point out.

- Application programming is much more popular than system programming. Although there's more space for innovation, there's also more people innovating, which results in more competition. This is not meant to attack any of your points, it's just something I would like to point out.

- Often times, it is applications that influences culture, not the other way around. For example, Facebook wasn't created in response to a cultural demand of social media platforms, but rather _created_ the cultural demand for social media platforms. This, of course, doesn't contradict with any of your main arguments, simply because it's just something I would like to point out.

- Most people (me included) doing system programming or even just system-level application programming (which is the closest I've gotten to system programming) are just doing it for fun. If you were to ask me to write a desktop application for a serious project there's no way I'm writing my own UI renderer in OpenGL (even if the project already involves OpenGL, you can still use ImGUI).


It kind of does. Most people struggle when they have to infer what is happening inside of what they're building, and some other do not.


I'll just take your word for it since I know about as much system programming as you do and it seems to align with common sense.


Also that was not an Ad Hominem fallacy since that "you" there wasn't referring to you.


What's taking so long to type?


<@672892838995820553> Are you there?


This is very sus.


Hey, you're not typing anymore.


<@672892838995820553> I have returned from a brief AFK.


Oh wait you kicked it.


Also, where did rai rai raku raku go?


You know you can Ctrl+A, Ctrl+X, type something else, ENTER, and Ctrl+V to continue typing the long thing.


Okay, what the hell is taking so long?


Uh-oh. I just realised that you had debate class.


Also gonna work on the JSON thing, but that's taking a lot of my brainpower and it's very exhausting.


Anyways, I'm probably gonna continue porting Anthony's Latin thing over to Next.js tomorrow.


Bruh, what's taking so long to type?


Anyways, it is around this time in which we VC, but neither of us have much time so I guess we'll just talk in TC.


Oh hey you're back as well.


<@672892838995820553> I AM BACK.


Ultimately, of course, if you are more used to application programming (creating software that directly interacts with a non-programmer), system programming is going to look both intimidating and "abstract" simply because you've had little experience actually writing system-level software. In this case, and you are pretty happy with where you are at right now, I would strongly suggest you stick with what you're doing since there is a higher demand for application programmers than system programmers and application programming is often easier than system programming. 

However, you have to keep in mind that system programming isn't all that different from application programming, with only one difference: system-level softwares's users are other programmers, while application softwares's users are non-programmers. Because of this, most of the same principles apply (though I'm staying rather open-minded on this subject since it's kind of philosophical).


Okay, I have made a previous message but I've deleted them since I want to elaborate on it a little more. Please read until the end.

So, Number one pretty much holds true for most things you'll ever create in programming. Although you can ask your friends to check out what you've written, to get other people to use your software at all you'll have to functionally have something that other software of it's kind do not which is hard since most of those software are created by large teams in large companies with lots of funding and spent years building whatever software they've been building.

Depending on how you look at it, number two either applies to everything or applies to nothing. In system programming, your "users" are often other programmers wishing to build something with your software. Although something as simple as a bootloader won't be much different from the competition, anything more complex than that (like, for example, a rendering library), there are going to be noticeable differences between your rendering framework and, say, PyGame, SDL, or BGFX because your users are programmers using your framework, and most programmers I know can tell the difference. In summary, different types of software are targeted towards different users.

Of course, you can argue that my previous paragraph was merely arguing over semantics, so let's take a look at something more high-level: a web-based word processor. There are many word processors you can use out there, whether it be Google Docs, LibreOffice Writer, or Microsoft Word. But the thing is, no matter which word processor you use, if you select the same font and type the same thing, the end result (a.k.a., a document) isn't going to look much different from each word processor. To the person reading the documents, each word processor aren't much different from each other. However, the person writing the documents using the word processors can definitely tell the difference between each word processors.


I mean bootloaders aren't that hard to write since you're limited to 512 instructions and can't do anything more than reading from disk and loading the boot manager.


Well, I mean unless you are planning to become a chip designer and work at a company like Intel you're probably not gonna want to learn about where to put CPU registers and how to lay out logic gates and etc.


The first two points are valid, the third point is partially valid (although C++ has more documentation, Rust has it all in a centralised location, making them easier to find), and the fourth point is quite questionable (Rust's standard library has networking utilities but C++ doesn't, and Rust's concurrency library also has significantly more features than C++, and Rust has an atomic version of the Rc, whereas C++ does not).


(Since you have to learn about memory partitioning and CPU registers when working with bare-metal programming).


So, the closest you can get to "learning every detail of how hardware works" is "learning how software can interact with hardware directly".


However, that's not possible since most chipmakers makes their chips' internal structures proprietary.


Learning every detail of how hardware works.


In some ways.


I think we have different definitions of _learning about how hardware works_.


It is always possible to scroll up.


It seems that no matter how much whitespace there is.


Also, given that you have limited experience in C, C++, and Rust, can you elaborate on what the issues with C and C++ are? (If this sounds like an attack, sorry, it's not meant to be an attack).


So, the only programming components that are really abstract are actually the middle-end, since they don't directly interact with the user and they don't directly interact with the hardware either, basically making everything look like magic.


But things also gets less abstract when you go closer to the user.


Also I'm not entirely sure what you mean by "abstract" since, in my experience, things only gets less abstract the closer you get to the metal.


For example, the singleton design pattern is rather difficult to implement in Rust due to it's limitations on static variables, but I don't use a lot of singletons anyways so that's not a big problem.


Though object-oriented programming is more limited in Rust compared to other programming languages, but that's not really a bad thing since I generally don't use a lot of object-oriented features.


I'm not that sure about C, but C++ has addressed most of it's issues (except for the thing with iterators and string encoding) in recent revisions. The only problem is that C++ still lets you use the traditional functionalities (for backwards compatibilty purposes) and doesn't force you to use modern features, unlike Rust.


The only people that are actually interested in low-level system programming are people that wanted to learn how hardware works.


Actually, from my understanding (which could wrong but then again the Rust people just says that they're focused safety without giving much more detail), Rust's intent is to provide a front-end for C that's both fast and safe.


So, ever since the beginning C's purpose is to replace assembly.


(Well, kind of).


I mean, Rust is designed that way as well so...


Even for making CLI programs Rust and C++ provides a much bigger feature set.


From my experience with C that is indeed true.


(And, from my understanding, C was originally created because the authors of UNIX got sick of writing everything in assembly).


Which is what C is mainly used for today.


At least for anything other than programming really close to the metal (which basically only includes embedded programming and low-level system programmng).


From my understanding `make install` just copies all the binaries that were built into their locations.


So, you can't guarantee that it'll work on all systems.


Mainly because it's not official.


No because the _language_ doesn't have any capabilities for doing anything. It expects you to use third party libraries to do anything. The designers did this intentionally to keep the actual language as small as possible.


As a result, most C and C++ projects typically gets around this by just bundling the libraries they need with them (typically in the form of Git submodules).


But that's the point: there isn't a package manager or library installation utility that's standard for the entire language or just available on a variety of platforms.


Brew is an option on macOS though, and Windows has Visual C++ Package Manager.


I mean there's APT but that's mainly exclusive to Debian-based systems.


Nah. The lack of a proper library/package management tool is a major criticism of C and C++.


Yeah. Trying to master many languages at once often results in having a poorer skillset because you end up learning language-specific things majority of the time rather than learning programming in general.


Though that's only if you've already determined which field you're going to focus on for the first few months.


And that's what most people does.


The only uses for C I could think of that even makes sense are these:

- CLI tools.
- OS kernels.
- Device drivers.


Yeah so it would work better as a first-language (if you're only going to learn it to learn basic programming and not to make something in C).


My explanation of the C programming language?


Which makes C (at least in Anthony Huang's opinion) a very good language for beginner to learn.


However, that's not to say that C is a bad language to learn. C forms the foundation of practically every other programming language, including C++, C#, Rust, JavaScript, TypeScript, and Java.


For a lot of other tasks most people use other languages since C is very difficult to scale up for larger projects.


However, most people typically uses it for system-level programming these days since it's one of the few languages that runs directly on the bare-metal with very little overhead from language features.


It is the large selection of third-party C libraries that allows you to do whatever you want with it.


The thing with C is that the language itself is very small and has a of functionalities (like printing, string manipulation, and math) moved into the standard library, which is also pretty small since C expects you to do a lot of things through third-party libraries.


As for what you can use C for, well, pretty much anything since it's general purposed.


C is a general-purposed programming language, and that's quite literal, because C was built with no purpose in mind.


It's a pretty small language.


May I suggest using C then?


Even Rust can be used to make small projects.


How is it not for small projects?


What's your change in philosophy?


(You can also host it on Windows as well but in my experience Linux is much better to use when it comes to hosting servers).


Okay, you can host it there.


After all, you have a Linux partition, right?


Technically you can host ASP.NET on your own computer and try to keep it on for as long as possible (24/7 uptime isn't necessary).


Which is why you have to use the `sizeof` operator to get the correct size.


They are different on different systems.


Also, the sizes of `int`s in C aren't standard.


Or maybe you picked it up from that code I showed you earlier.


<@672892838995820553> It appears you know more C than I expected.


It never does.


Unfortunately as you will learn later on what you think often does not correlate with reality.


There are few harmonic systems that can be abbreviated to just a few decimal places, but such systems are rare and often gradually disintegrates due to the Second Law.


Every scenario required infinite precision due to the non local nature of the universe.


Only if the system can operate without a predetermined plan.


Therefore, it is often best to be conservative and calculate with maximum precision possible, but most times it is not even enough.


And properly determining the amount of precision required is even more computationally expensive.


Unfortunately due to the sensitivity of chaotic systems infinite precision is required to determine a viable plan for the future.


In order to plan ahead of time would require considering every possible factor, which is impossible with the current capabilities of our computers.


This is because, according to chaos theory the future is fundamentally unpredictable.


However, to go with the most practical approach I would first have to come up with a full project plan ahead of time, something that I still struggle with.


Which how I filtered the names list to get rid of place names.


Which I also did.


For the character names, I simply matched each word against this English first name database I found to see if it's a name or a word.


I just saved snippets of it for future references.


(Not that I got very far in the first place)


Unfortunately the difficulties of operating subjective raw data ultimately lead to me abandoning the project.


I tried that.


Because operating directly on raw data is difficult.


I pass them through a text analyzer to deconstruct it into C structure, which can then be processed through traditional algorithms.


That's how I read.


Fiction would require neural networks and computer imagery and stuff.


I'm literally struggling with parsing JSONs.


They aren't very structured, therefore contextual assumptions must be made.


I unfortunately is having trouble parsing fiction.


I haven't read any fiction in a long time.


I know you do though.


However I've seen physics textbooks address Schrodinger without the two dots on top so...


Why should I put so much effort into typing s letter barely anyone will recognize?


It's the best Linux DE in my opinion.


On mobile yes, but on KDE its a little complicated.


Now, before you tell me that I need to put two dots on top of the "o" in "Schrodinger", let me just tell you how hard it is to get an 'o' with two dots on top.


Actually I just found out that it does support server-side scripting in the form of Next.js. But, as the name suggests, it's meant for JavaScript/TypeScript.


You can make a simulation of the wave-function, governed by the Schrodinger equation, with GPU compute through OpenTK.


So, if you need server-side scripting for your website, you're kind of out of luck with GitHub Pages.


GitHub Pages don't support anything other than raw HTML+CSS+JavaScript/TypeScript.


That's why the server is now called "Dead"


Anthony left the server and Neng has been offline for 72 hours now.


I also know a decent amount of Python, but probably not as much as Neng.


<@672892838995820553> does, but he's been offline for a while so I don't think you can contact him right now.


Until it got ported over to other platforms.


Speaking of Unity, it was actually Mac OS X exclusive for a while.


<@672892838995820553> What does "10086" signify here?


(Also, if your device is GPS incapable it's probably wrong).


Please allow it to view your position.


<@672892838995820553> The non-working version of this.


BRUH IT'S STILL USING MY OLD ADDRESS FROM BURLINGTON 😹


That guy could be one of them.


Some American ISPs are already assigning IPv6s to their customers.


Today, there is nothing to announce.


Good afternoon, everyone.


BRUH YAHOO ADDED AN INFO CARD ABOUT US


No wait it applies for Bing as well!


(Unfortuately, it only seems to apply for DuckDuckGo).


**LES GOOOOOOOOOOOOOOO!!!**

We are proud to announce that our website is the first result that comes up when people searches "Li Institution".


I'm not sure why it keeps saying INVALID_ENUM since all of my enums were valid and everything seems to work.


I literally just found out what the Belarusian flag looked like.


I typically ignore error messages unless something's not working.


Bruh, the project's source code is literally public.


Prebuilt binaries for the Wars game is now available free of charge.

**Download Links**

**Windows:** https://github.com/Hello56721/wars/releases/download/1.0/wars-1.0-windows-x86_64.zip
**macOS:** Not supported.
**Linux:** Coming soon.


Totally not sponsored by NVIDIA.


**NEW CHESS PROGRAM RELEASE**

Added a pause menu and fixed a few bugs found by Neng Li.

**Download Links**

**Windows:**  <https://github.com/Hello56721/chess/releases/download/0.3.0/chess-0.3.0-windows-x86_64.zip>
**Linux:**  <https://github.com/Hello56721/chess/releases/download/0.3.0/chess-0.3.0-linux-x86_64.AppImage>


New chess program release.
https://github.com/Hello56721/chess/releases/tag/0.2.0


**IMPORTANT ANNOUNCEMENT**

Several members of this Discord server (including Harrison Lilley and 赵梁汇) have had their accounts compromised and used to advertise Discord servers. Fortunately, both members have managed to successfully reclaim their accounts as of writing this. 

It is unlikely that hackers are targeting members of this server specifically, but stay alert and try and avoid getting hacked.


Created voice channel versions of text channels.


Due to unforeseen circumstances, the chess program may be further delayed once again.


I was thinking about making a "CCP approved software +15 social credits for playing this game" badge on the main menu as a joke but I'm afraid of public backlash so I decided not to.


Now, the next thing to do would probably be to thoroughly test it to make sure no bugs slipped through the cracks, but that's boring, so I'm gonna make a menu screen instead.


Finally, all the chess rules in the program are properly implemented.


And employees definitely aren't running bot commands.


And all the member-made bots are either no longer maintained or just dead.


We've actually kicked most of our bots.


Everything just died.


Nobody seems to run bot commands either.


Hence it's name.


<@816692546272100442> After some investigation, me and Neng found out that the bot is just grabbing random messages from other servers and using word count to determine which message to reply with.


Bruh, it actually worked?


!e import webbrowser
webbrowser.open("https://www.youtube.com/watch?v=dQw4w9WgXcQ%22)
print("yes")


!e import webbrowser
webbrowser.open("https://www.youtube.com/watch?v=dQw4w9WgXcQ")


Don't worry it's just taking messages from other servers and sending them here.


I said "Hello."


?log channel <#983539124470423553>


It's just taking messages from other servers and sending it here.


It's probably from an NSFW channel.


<@672892838995820553> Look at what it grabbed from the other server.


DISCORD API STOPPED RESPONDING TO ADD FIELD CALLS.


And it does work.


I tried that.


It doesn't do anything when called 😹


Okay, for some reasons, `addField` doesn't work at all.


<@672892838995820553> I updated the list roles command.


$$$start_spamming_dm$$$ <@594911836147548170> hello


$$$start_spamming_dm$$$ <@672892838995820553> like i


$$$start_spamming_dm$$$ <@650439182204010496> i l


$$$start_spamming_dm$$$ 650439182204010496 i am a truck


$$$start_spamming_dm$$$ 650439182204010496 yes


It's been a while since the executive talked.


Including this one.


Anyways, I typically try to load file formats myself (unless it requires an understanding of calculus like PNG does.).


Anyways, no I do not.


Because if you're loading them manually you can just devise your own method.


Or with a library?


Are you loading them manually?


It replaces certain text with emotes.


It's a BetterDiscord thing.


I'm trying to get the "noooo" emote that I saw before.


Bruh, where's the "no" emote?


Nope, doesn't work.


<@672892838995820553> Change Kim Jong-un's nickname to "Sexiest Man Alive".


<@672892838995820553> Also, can I have write access to the Spreadsheet so that I can also record data as well?


<@672892838995820553> You forgot to record activity data for May 25th, 2022.


Then again, this is satire news, so I guess we could keep some of the issues to improve the satiritity.


Okay, yeah, we still need another round of editing before we could publish this.


<@672892838995820553> Also, since he's in the United States, shouldn't we specify his net worth in US dollars?


But it doesn't anymore.


When I wrote the comment the article looked corrupted.


lol send_news 977378498782056449


Turn off embeds all together.


I have pushed all the changes to the GitHub repository, so you can continue working from there.


<@672892838995820553> I gotta go.


<@672892838995820553> By the way, there's a preview thing that you can use.


But who cares.


Embed's not right though.


By the way, it's already online 😹 
https://scp-studios.github.io/li-institution/employment-contract


Ah, I see.


Anyways, are you going to join or not? <@672892838995820553>


I just realised I don't have the repo cloned.


Sorry for taking too long.


We should put it in scp-studios.github.io


Kind of sick of using DML (Discord Markup Language).


Make it in markdown this time.


<@672892838995820553> So, should we spend the rest of the night writing an employee contract?


All the executives only chats died.


What do you mean?


Also, it used to be named "Capitalism - A rich community", but the name has been changed since like, a few days ago I think.


I'm not sure why though.


During development it was.


It's this server that he made that kind of resembles the previous G9DS/G9DE iterations that's named "Capitalism".


<@672892838995820553> Now that it's no longer confidential, I can finally tell you about Jay's Capitalism server.


Because of the confusing syntax (especially around templates)?


Because of the massive template library?


Because there's three ways of doing the most basic things?


<@672892838995820553> Do you think that C++ is a hell language?


We gotta finish the Employment Contract quickly then.


$$$ghost_ping$$$ <@869205843755794472> 966819556016418856 966819556016418858


$$$ghost_ping$$$ <@791490640928047184> 966819556016418856 966819556016418858


$$$ghost_ping$$$ <@820693532385869836> 966819556016418856 966819556016418858


$$$ghost_ping$$$ <@553711038516690976> 966819556016418856 966819556016418858


$$$ghost_ping$$$ <@869205843755794472> 966819556016418856 966819556016418858


How about we make them as short a most news articles entry paragraphs, which are only two sentences long.


Maybe they're just reading the headlines.


I just removed null from the server.


I shall consider this.


Employees only just died when programmers only came into existence.


<@628672513345454122> Welcome back!


**Joseph Leiter Aitcheson Jr.** (July 31, 1928 in Olney, Maryland - May 24, 2014 in Westminster, Maryland) was an American steeplechase jockey who won a record 440 timber races and was inducted into the National Museum of Racing and Hall of Fame in 1978.


**H**, or **h**, is the eighth letter in the ISO basic Latin alphabet. Its name in English is aitch (pronounced /ˈeɪtʃ/, plural aitches), or regionally haitch /ˈheɪtʃ/.


**NICE Ltd.** is an Israel-based company, specializing in telephone voice recording, data security, surveillance, and Robotic Process Automation as well as systems that analyze recorded data. The company serves various industries, such as financial services, telecommunications, healthcare, outsourcers, retail, media, travel, service providers, and utilities. The primary listing of the company's shares is on the Tel Aviv Stock Exchange; where it is part of the TA-35 Index.Barak Eilam became CEO in April 2014, replacing Zeevi Bregman. Eilam previously headed the company's Americas division. As of November, 2020 the company had ~6,800 employees.


**Enemy**

Super Metal Hippoe is a larger, stronger and faster version of Metal Hippoe. With his guaranteed knockback ability, quick movement speed, and high health, he can be a very annoying enemy to fight.

This Metal enemy, unlike Sir Metal Seal, tends to appear in non-Metal stages like Saucy Scandals or Oil Spill Rainbow. Super Metal Hippoe also tends to appear in groups of two or three in some stages, such as Total Myopia and March to Death.


**Super Metal Hippoe** (超メタルカバちゃん, Chō Metaru Kaba-chan, Super Metal Hippo-chan) is a Metal enemy that appears in The Aku Realms and Legend Stages.


**Radio** is the technology of signaling and communicating using radio waves. Radio waves are electromagnetic waves of frequency between 30 hertz and 300 gigahertz. They are generated by an electronic device called a transmitter connected to an antenna which radiates the waves, and received by another antenna connected to a radio receiver. Radio is very widely used in modern technology, in radio communication, radar, radio navigation, remote control, remote sensing, and other applications. In radio communication, used in radio and television broadcasting, cell phones, two-way radios, wireless networking, and satellite communication, among numerous other uses, radio waves are used to carry information across space from a transmitter to a receiver, by modulating the radio signal in the transmitter.


This channel dead after <#989191184360558602> was created.


Which you probably do not.


You only need to do this if you wanted to manually create the partitions.


Also, I doubt that he's actually going to try Linux.


And time to update the projects page for the Li Institution website.


Or anywhere where it's not installed by default.


Don't try KDE on Mint.


It's not in my experience, but I guess we have different experiences so okay.


The only downside is that it crashes more often than GNOME.


But KDE isn't that hard to use in my experience.


Oh yeah, right.


He didn't say anything about beginners but okay...


ElementaryOS if you're familiar with and/or prefers macOS.
Linux Mint if you're familiar with and/or prefers Windows.
Ubuntu with GNOME if desktop stability is more important than anything else.
Kubuntu if you really like the KDE desktop or if you want to be as productive as possible.


That's your decision.


He does now I'm pretty sure.


<@672892838995820553> I just realized that you're the only programmer here that haven't tried Linux yet.


The latest version that still works with Commando is version 12.


Okay, yeah it seems like it's removed in version 13.


It's called Commando.


The repository is archived back in May 2021 so...


It used to have one, but as more and more bots moved to slash commands the developers decided that it's no longer necessary.


Weren't you trying to grab Pratha's token?


<@845361227093508116> How's life as a Discord Token Grabber?


So, it's a TITAN GOD 128G?


The Anthony with 10 fully unlocked NVIDIA TITAN A GODs 128G GDDR7X?


After he disabled 99% of the CUDA cores, yes.


Introducing NVIDIA TITAN GOD, the most powerful content creation GPU in the world.

Powered by Lovelace, NVIDIA's next generation GPU architecture.

Featuring 48 GB of GDDR7 VRAM to easily fit any large workloads.

40,789 CUDA cores.


NVIDIA TITAN GOD.


That would require complex thread-architecturing that we're not aware of.


Maybe I will.


Because it's pretty much done except for queen-side castling and en passant capturing.


If you want queen-side castling and en passant capturing you'll have to open an issue.


Anyways, I'm terminating the development of the chess program.


Who uses search engines?


Anyways, in all seriousness, <@845361227093508116>, did you actually think that Linux was a web browser?


Which is why I'm calling 911.


Now you're drinking it. 🙀


I saw you guys holding beer through Mazin's window.


No, you guys are drunk.


It's an operating system kernel.


It's not a search engine either.


Linux isn't a web browser, sir.


<@672892838995820553> It's time you choose.


Web development, of course.


But Mazin and Neng aren't part of any departments.


<@&977367551933841480> Should we open up more departments?


<@845361227093508116> Neng's gonna derive the Dirac Equation for you.


But only you will see it.


<@672892838995820553> By the way, I changed Anthony's skin.


Also, <@672892838995820553>, are you on your gaming laptop or your office/school laptop?


Wow, <@628672513345454122>'s been playing Minecraft for 16 hours.


We had to buy a computer instead of build one though.


But not much about them.


We did learn about computer parts.


If you know the basics of IT, it shouldn't be too hard.


It's pretty easy for me.


The English exam got cancelled.


It's actually Business-Technologies.


Wait, no, I got confused.


You don't like English?


Because you're CEO, right?


So, I am no longer an Admin.


<@672892838995820553> I have transferred the ownership of the server to you and removed Administrative privileges from me.


<@672892838995820553> Do you check your personal email?


<@628672513345454122> Bruh, Mazin's not responding to my pings.


<@845361227093508116> So, what projects are you working on?


<@845361227093508116> Okay, now you have to start either making projects or contributing to ones.


Is he using an M1?


Why not x86_64?


Let me see.


And did he?


Also, Mazin is wanting to become an employee.


They all got marked as read for some reasons.


Oh yeah, it's muted.


I'm not getting any messages though.


It's spamming it's own DM?


Where is it spamming?


I didn't know it was spamming at all.


That's probably why it's cancelled.


We could use Python to control the UI.


<@672892838995820553> It's your call now.


How do you like my idea for a collaboration project?


I might disappear on Discord from time to time.


At least not on the internet.


Probably not though.


Or maybe in a few months.


He's gone now.


I knew you wouldn't like it, so okay.


Basically, an editor that allows you to visually edit HTML elements and CSS styles.


We could create a visual HTML/CSS editor.


<@672892838995820553> By the way, I have an idea for a collaboration project.


Well, relatively, since China's average income is lower.


And plus, internet service providers are expensive in China.


My grandparents are too lazy to install internet since they rarely uses it.


I was writing my exam this morning 💀


Yes, but unfortunately it was cancelled due to "undisclosed reasons".


My flight got cancelled. 😾


By the way, I'm gonna be going offline for the summer, starting now, due to unforseen circumstances. I'll be back online at the end of September.


Also, since there's only three people in the Li Institution, aren't "CEO" and "Executive Council" and "Department Head" just meaningless titles?


Or rather, since <@672892838995820553>'s CEO, he can just override us and make the decision himself.


<@672892838995820553> <@628672513345454122> <@650439182204010496> Let's do a vote: Should we hire/train more programmers?


Apparently, there's this thing in most browsers called Native Client which basically allows the browser to execute native code (like C, C++, FORTRAN, etc) in a sandbox from the browser.


Okay, I found out how they did it.


But it supports web games.


Okay, <@628672513345454122> apparently Godot engine does not have any HTML or JavaScript in it.


Okay, that's not a good idea.


Rewrite the whole engine in JavaScript and HTML?


Since they're so popular these days.


We also need it to support web games.


Also, <@672892838995820553>, what's the plan for the future of the Li Institution?


Some are written in Bash though.


Most CLIs are written in 100% C.


And different languages if the operating system demands it.


We could also embed some Python into the browser, though I would suggest that we don't do that unless we have a really good reason to do so.


With C++ making up majority of the browser and HTML and JavaScript for the built-in pages (like the settings page).


Mainly C++, HTML, and JavaScript.


Sure, why not.


Okay, maybe not the browser.


Including the browser.


A full stack plus the system level components.


We expect to make a web platform from top to bottom.


So, where are we going to find programmers?


...without interacting with that person at all.


He's the only guy I knew who grabbed someone's token.


He seems to like creating aggresive software though.


Anyways, what other departments are there besides web and system?


His real name is Sid.


This guy named "What the [PLACEHOLDER]"


Though he and Neng has some history together so I don't think we can really hire him.


There's also a guy from IRHS who's kind of specialized in system programming.


(Though to be honest I'm not sure which department Neng fits in).


Currently there's only one employee for each deparment. 😹


I remember that.


Anyways, there's now two separate departments in the Li Institution:
- Web development.
- System programming.


I can use PyPy though, but I have not seen how well it's going to perform in real-world applications, so...


Though it's speed makes that decision questionable.


I might use Python as the scripting language for the SCP Engine.


*Fundamentally* different stuff.


Not sure how well Python integrates will Node.


You can write both front-end and back-end softwares with it.


Also, now that I think about it, JavaScript actually spans the entire stack.


Not really back-end anymore.


Unfortunately, that's the area that I currently specialize in.


What do you mean?


Excluding system-level frameworks and engines, of course.


So, everything related to web development.


Like, truly full-stack?


Are you doing full-stack or just a large portion of the stack?


Wait, no you're specialized in front-end.


<@628672513345454122> What about you?


<@672892838995820553> By the way, should we make our own cloud platforms?


Imagine thinking that the Korean penisula is a geographical island.


But there's no trades.


Because the definition of an island country is literally a country that no other countries interacts with.


I thought the DPRK was an island nation.


I'm surprised that they even managed to get their hands on silicon chips.


Since the results happen in real life rather than virtually.


Though embedded development is even cooler.


Engine dev is cool but you can't see any results for the first few months of development.


Now that I think about it, the Li Institution site doesn't have a projects page.


Also, <@672892838995820553> as has a GPU, so we might use that as well.


Then add more if we're not satisfied.


We'll just start off with 20.


Okay, so we don't need like, 4 trillion layers and stuff?


It probably is.


Also, neural networks needs really beefy GPUs to run, so we might have to ask Akiara to let us borrow his RTX 3090.


And the Python web API interacts with the CUDA/Vulkan/C++ system.


You interact with the Python web API.


How about both a website and discord bot?


Python's just for managing it.


Most the AI would be either running in CUDA or Vulkan Compute.


Didn't it say that me and Neng are going to write the back-end?


Our own framework, of course.


Probably more like XML.


Well, it's just a single file where I randomly write stuff I wanted it to do and have it do it so...


We can do a complete rewrite.


Can Pooper's lack of OOP is the reason why I found it awkward to work with.


Hold on I gotta let my brother use the PC now.


Bruh, now every member has owner role in the Li Institution.


Also, <@672892838995820553> and <@628672513345454122>, should I give <@628672513345454122> Owner role in the GitHub organization?


Since you're CEO, I believe that we should list your email as the Li Institution's contact email rather than mine.


<@672892838995820553> What is your email address?


Speaking of websites, I have to fix both the Li Institution contacts page and the chess program.


You'll hate it even more when you need to write a web renderer.


He said he's not adding it.


Anthony doesn't like Jaydinian Federation though.


The only difference would be the text in the middle.


Most of the middle east uses the same flag design.


oH, yOu diDN't kNOw tHaT sOmE cOuNtRieS usEs thE sAme fLAg?


...you for the super idol de xiao rong dou mei ni de tian 八月中午的阳光，都没你耀眼。


*Iraqi invasion of Kuwait*


You can't run anything until the current game is over.


No it only responds to the person who ran the command.


Maybe join VC and share screen?


You need help?


TypeScript only has `==`, which acts the same as `===`, so...


Use the debugger to find out which line caused that.


Wait, it's not ```js
message.reply(reply)
```
But rather it's ```js
message.reply({ embeds: [ reply ] })
```


Okay, share your screen.


Command has to be above the `command == 'guess` thing.


Is it outside of the `client.on("messageCreate"` function?


I forgot. 😹


The code that you already have that was ommitted for brevity.


The `//...` parts indicates code in between, in case you don't know.


Try this ```js
// ...

let guessingCountry = false
let correctCountryName = ""

client.on("messageCreate", (message) => {
    if (guessingCountry) {
        if (message.content.toLowerCase() == correctCountryName.toLowerCase()) {
            message.reply("Correct!")
        } else {
            message.reply(`Wrong, dumbass. The correct answer was **${correctCountryName}**!`)
        }
    }
    
    // ...
    
    if (command === `${config.prefix}guess`) {
        let country = Math.floor(Math.random() * countries.length)
        let flag = country.flag
        
        let reply = Embed()
        reply.setTitle("Guess the country!")
        reply.setImage(flag)
        
        message.reply(reply)
        guessingCountry = true
        correctCountryName = country.name
    }
});
```


Copy me this code first.


I'm gonna use VSCode since the typing code in Discord is hard.


Okay, let me type it out.


So, you wanna figure it out yourself or have me send you the solution?


I can either let you figure it out yourself or I can just send you the solution.


Did you even fill out the flags?


In China, second graders had to recite 20-characters long poems.


<@628672513345454122> What is this game?


(Which includes permission to delete the repository).


On the repository.


You have Admin permissions.


Also, the URL is https://github.com/Li-Institution/li-institution.github.io.


Anthony just pushed some changes.


No, from your own computer.


Ah, so you can just edit locally.


$$$start_spamming_dm$$$ <@672892838995820553> JOIN THE FUCKING LIVESHARE


<@672892838995820553> Join VC muted since you can't hear anything.


There was an error with the command.


<@628672513345454122> Are you back at your PC yet?


Talking with his mom, I think.


<@672892838995820553> 

> Your server is online, join now!

- Aternos


He setted the end return there or something.


Should I reset the world or no?


<@672892838995820553>, how about you?


<@672892838995820553> <@628672513345454122> Also, I can start the server if you guys would like to play on it.


Speaking of which, we haven't decided on the collaboration project yet, so we might either talk about that or cancel it right now.


Where it's heading and all that.


We'll be talking about where the Li Institution's plans are.


I'll wait for you.


<@672892838995820553> <@628672513345454122> VC?


And the squares in between the rook and king must not be in check and must be empty?


<@672892838995820553> To clarify, for castling to occur, neither the King nor the rook can be moved prior to castling?


What does it do?


How about 30 minutes of Minecraft to start and we'll start talking about web development?


Minecraft or Web Development?


<@628672513345454122> Okay, let's schedule the VC right now.


Though title is still clipping to the right.


Since XCB and Vulkan are much newer and have better documentations.


<@672892838995820553> Should I abandon GLX and OpenGL and instead use XCB and Vulkan instead?


Vanilla 1.19 literally just released, so it'll probably take a while.


Good to know.


<@672892838995820553> <@628672513345454122> When should we VC?


Yes, but it only allowed me to use OpenGL 1.1.


So, I'm gonna try and create an OpenGL context without libraries.


<@672892838995820553> It's the weekend so I don't feel like working on anything today.


I'm gonna have it shuffle the array a thousand times per member to make it even.


So, gonna add more names.


Anyways, probability distribution still seems uneven.


That's the name of one of my classmates.


I can run it a second time so it will go to someone else.


Also, I'm going to stop limiting myself to Shakespeare names and just add whatever random names I could think of.


Speaking of which, I'm going to run a random function a hundred times and graph out the probability distribution.


It favours values closer to 0.


But JavaScript's random function is uneven.


That's what I'm doing.


Okay, the name distribution is not improving.


I just found out that Antonio appeared in five Shakespeare plays.


<@672892838995820553> Name distribution looks like this:
```js
const TWELFTH_NIGHT_NAMES = [
    "Duke Orsino", // 4
    "Viola", // 4
    "Valentine", // 3
    "Sebastian", // 2
    "Countess Olivia", // 2
    "Sir Andrew Aguecheek", // 2
    "Sir Toby Belch", // 1
    "Maria", // 2
    "Antonio", // 1
    "Cesario" // 0
]
```


Yee, looks good.


When I use a VPN, the speed suddenly sped up.


It turns out it's because of my route to GitHub.


Have you tried cloning a repository?


<@628672513345454122> GitHub seems slow today.


I never went to high school either.


<@672892838995820553> So, what's the plan for the collaboration project?


I never really went to elementary school so...


I didn't have them at my elementary schools either.


We don't have those here at my school.


This is what Huang's inanimate profile pictures looks like, by the way.


Bruh, even though I logged out, all of the programs from my previous session are still running.


So, you can tomorrow?


It's not even running.


Also, how is rai rai raku raku online?


<@672892838995820553> <@628672513345454122> VC?


Me:
- Chess program
- SCP Engine
- rai rai raku raku bot

Huang:
- FHDBot
- anthonyhuang07.github.io

Li:
- can pooper
- carpetmaker3162.github.io


In this channel.


By the way, should we list the personal projects here?


Also, I've decided that it's easier to implement the remaining chess rules in C++ than to create a Python API and have Neng implement them.


Can you be more clear?


<@672892838995820553> What do you say?


Like, the original position of objects and characters and stuff.


Things that we could do:

- SCP Engine game: I write the engine in C++, you write game behaviours in Python, and Huang could write the game scene layouts and stuff in HTML

- Website for the Li Institution

- Chatbot with Python backend written by me and you and a JavaScript frontend by Huang.


Like, should we do a project that all three of us will contribute to?


<@&977367551933841480> Should we have a collaboration project?


I use the term "sandbox".


Ah, I see.


<@672892838995820553> What is pytest.py?


I thought I was kicked.


Also, by the way, <@672892838995820553>, how did Operation D Day go?


It mentioned someone named "Marvin", which of course, doesn't exist in this ever.


<@672892838995820553> Okay, yeah, it seems like the bot really is taking messages from other servers.


So, everything I need is officially checked off.


By the way, variables seems to be persistent when used from c++.


<@672892838995820553> How's PyTorch going?


<@628672513345454122> How did you join <#968677012002734100>?


Although it makes little difference when there is a small set of commands, when there is a large amount of commands it can be much more efficient.


When a message is invoked, it binary searches through the array and executes the designated handler.


(Not really needed though).


Now to check variable persistance.


<@672892838995820553> WOOHOO!!! AND I CAN PASS VALUES IN BETWEEN C++ AND PYTHON!!!


I never take naps.


Not too well?


OMG, C++ to Python interface works!


<@672892838995820553> How's PyTorch going so far?


Or you can outsource the AI processing to the cloud.


...and why people usually buys hundreds of them.


I guess now you know why GPUs designed to work with AIs (like Tesla cards) have 80+ GB of ultrafast memory.


For something as sophisticated as a chatbot, it's probably at least 100 GB.


AI models are much larger.


Those are training data.


AI models are not stored in the form of texts.


Do you know how much data pre-trained networks need?


Okay, sounds like it's pre-trained.


<@672892838995820553> Is it literally still installing?


Okay, sounds like it's pre-trained.


I wonder if it requires you to train it.


With which library?


What are you doing?


The python interpreter is in `/usr/bin`, the standard library is in `/usr/share/python/libs`, the C++ interface files are in `/usr/include/python`, the documentations are in `/usr/share/man/python`, the configuration files are in `/etc/python.d`.


Because Linux installs things all over the place.


For me, it's all over the place.


So, I do not have to look up online where Python could potentially be installed.


CMake has built in functions for finding Python C++ interface files. 👍


Now to experiment with creating Python APIs in Sandbox.


All I need to do is create a Python environment, load the script, call the functions I wanted to call, and retrieve the result.


Also, since you're more experienced with chess, can I just create a Python API and have you write the move checker?


If the King is already in check, any moves that keeps the King in check is illegal.


Since any moves that results in the King being in check is marked as illegal.


What happens during a checkmate or stalemate is simply a player becoming unable to make any moves.


Also, I there's no end-game screen yet.


Isn't that a stalemate?


1. Simply keeping a log of all the moves that have occured and do stuff. ✅ 
2. I'm not even entirely sure what can cause a draw so...
3. Would require material tracking system, which is something that I do not have.
4. Simply change the pawn's role when they hit a specific row. ✅ 
5. Already implemented. ✅ 
6. Not really necessary since I don't even have an end-game mechanism yet.
7. Not really necessary since it can be done in real life since the two players are literally sitting right next to each other.


<@672892838995820553> What things other than en passant capturing and castling do I need to implement?


So, now, the rules are almost complete.


<@628672513345454122> I have finally fixed the issue with checking.


<@672892838995820553> Are you just running Can Pooper or are you editing it as well?


So you won't be working with AI anytime soon.


You don't like Python, I assume.


CUDA being the majority.


Backend AI is either C++ or CUDA.


At least frontend AI libraries are all in Python.


Most AI libraries are in Python.


For working with AI.


It's a neural network library.


Okay, from it's GitHub README, apparently it recommends having an NVIDIA GPU, but it also supports running the neural network on the CPU.


Are you looking into it?


There's also TensorFlow, but I've seen your experience with it so...


Tried using it though?


There's a library called PyTorch to help you.


By the way, <@672892838995820553>, should we implement natural language processing in Can Pooper?


It even supports Python.


It doesn't require any special hardware.


It's a library for making AIs.


Speaking of AI, have you ever heard of Triton?


Okay, BetterDiscord is back.


Also, bruh, the update overwrote BetterDiscord.


Yeah, I heard.


Give the link to the Admins and have them fix it.


In regular school or the schools that your parents send you to?


Fans are requesting them right now.


<@&977367551933841480> Should we make more Pooper Times articles?


What it does is it assigns a function to be run in a specific time.


It does not.


$$$start_spamming_dm$$$ 628672513345454122 join neng in mc at `ur_mom_dot_me.aternos.me`


<@628672513345454122> JOIN SERVER WITH NENG!!!


$$$start_spamming_dm$$$ 672892838995820553 r u there?


<@672892838995820553> Join VC.


<@672892838995820553> Are you there?


<@672892838995820553> <@628672513345454122> Wanna VC?


<@672892838995820553> G9DE died.


Anyways, gonna come back at around 4:20.


By the way, how's this so far?
https://nengipedia.fandom.com/wiki/Jaydinian_Federation


So, in about <t:1654460400>


<@628672513345454122> When's your class thing over?


My school does not allow that.


Why not now?


<@672892838995820553> <@628672513345454122> By the way, when should we have the VC session?


Haven't you created something in PyGame already?


Though given Apple's garbage support for OpenGL, I wouldn't recommend using OpenGL on macOS.


OpenGL's available in Python in the form of PyOpenGL, by the way.


Okay, hold on I gotta go eat dinner.


But Neng's not on.


<@672892838995820553> <@628672513345454122> When's the VC session going to happen?


Unfortunately, if the king is indeed in check, it won't work.


<@672892838995820553> <@628672513345454122> Now, any move that results in the King becoming in check is no longer legal.


<@628672513345454122> By the way, how's your attempt at killing G9DE going?


He's just a guest hanging out in the lobby, so yeah.


<@672892838995820553> Also, what should we do about Mazin being in this server?


You can only run `async` functions with `asyncio.run()`, and when you run it with `await`, it runs as if it's not an `async` function.


`async` just tells you that when that function is ran, it does not wait before calling the next function.


Okay, from what I know.


I'm gonna look it up on the Python documentation.


`async` might just be a hint or something.


Speaking of which, should I use Python, Java, C#, or Lua for scripting for the SCP Engine?


Though Python to C++ bindings aren't really trivial.


Maybe you can use C++ since it's much faster.


Start using threads then bozo.


Wait, it's a wikipedia crawler?


You're making a web crawler?


Ah, I see.


What was the accidental argument?


However, despite us not talking on G9DE, it's still going.


Letting G9DE die or letting the operation die?


<@628672513345454122> How's your operation going?


Are they trying to nuke G9DE or something?


<@628672513345454122> Okay, what even is Operation Doomsday?


Hold on while I put my GPU under 100% load to solve this.


Is that a system of equations?


There's an impostor among GitHubbers.


We will not be publishing this data but don't care if you do it yourself.


As you can see, activity seems to be resurging.


<@672892838995820553> <@628672513345454122> Here's the activity graph for G9DE.


<@628672513345454122> Are you busy right now?


Very good! Now, you have anything to say in return, <@628672513345454122>?


<@628672513345454122> Busy right now?


Also, I'm going to avoid sending Mazin the data since he's now technically a member of G9DE and he's not a real employee.


The server seems to be making a resurgence.


But, unfortunately, it doesn't work.


I just found out that I can install Google Play Store on Linux 🙀


Seen gameplays of it?


Heard of it?


By the way, <@628672513345454122>, do you play Poppy Playtimes?


There goes your chance of making it into the city news.


Also, <@628672513345454122>, lockdowns are designed to make sure that you survive.


(Or, technically, I didn't)


I predicted that Mazin would invite null.


It's why I muted the lobby.


Well, it's from NZXT anyways.


Why are you online then?


<@672892838995820553> <@628672513345454122> Thoughts?


Okay, here is the updated G9DE activity graph.


<@672892838995820553> Give me link to G9DE and I'll record activity.


Hey, we've only recorded activity up to May 27th.


Are they all recorded?


Also, why are there no activity on G9DE?


Too much stuff going on.


Just so you know I've muted the lobby.


By the way, have you tried to use neural networks to do anything yet?


So, anything new?


<@672892838995820553> HEEEYYYY!!! WHAT IS UP?


I ran it on the last second.


By the way, does the chess program thing work on your side?


For Windows, of course.


Anyways, I'm gonna make another release of the chess program.


And one of my buffer servers is one of them.


But it's only available in some servers.


Also, I just found out that Activities was released.


I wanted to make the messages ephemeral, but decided that it's best not to.


Though I do agree that nuking the lobby is a bad idea.


Second of all, the isn't the lobby supposed to be a place for people to talk to us, rather than hang out?


Okay first of all, this is not an online community demanding activity.


*I was going to suggest nuking the lobby, but then decided that it was a bad idea*.


<@672892838995820553> Also, should we perform a janitorial operation?


It says it's new to Discord so...


<@672892838995820553> Who is <@980240306249297930>?


```js
let countdown = 25
function reduceCountdown() {
    if (countdown == 0)
    {
        return
    }
    setTimeout(reduceCountdown, 1000)
}
```


Proving once and for all that the Li Hypothesis is indeed true.


Maybe the server will rebound.


Keep track of server activity.


Let's see if anything happens if I leave.


Since I'm pretty sure the only Administrators online were you and Mia.


I wonder who though.


Wait, I got banned.


Okay, I'm going to do something.


<@672892838995820553> Nothing happened.


Actually, I'm going to try it.


Would I get banned for cursing the state?


What would happen if I said "DIE SERVER DIE" in the chat?


By the way, are we still rooting for the Death of G9DE?


<@672892838995820553> Updated to-do list.


Okay, good enough, I guess.


Seems like it's bouncing back.


<@672892838995820553> The server hit a record activity again.


So, you wanna know how to do it?


But it's not like that on my end.


It's the only official Discord library.


I wonder what it looks like from your end.


Or click on my profile.


Click on my name on the right.


Maybe on the next issue we could create a paragraph about comments.


I just create a comment thread.


But people can just create threads if they would like to comment.


I noticed that there's no comment section for the Pooper Times.


lol send_news 967091628177252423


So I kind of have to figure a lot of this myself.


Discord documentation is outdated.


Here's the code, by the way.
```c++
#include <discord.h>
#include <iostream>

int main()
{
    discord::Core* core{};
    discord::Core::Create(979886765898858527, DiscordCreateFlags_Default, &core);

    core->SetLogHook(discord::LogLevel::Debug, [](discord::LogLevel p_log_level, const char* p_message) {
        std::cout << "[DISCORD]: " << p_message << std::endl;
        });

    discord::Activity activity{};

    while (true)
    {
        core->ActivityManager().UpdateActivity(activity, [](discord::Result p_result) {
            if (p_result != discord::Result::Ok)
            {
                std::cout << "[ERROR]: Failed to update activity." << std::endl;
            }
            });

        core->RunCallbacks();
    }

    return 0;
}
```


<@628672513345454122> Look at what I'm playing.


I'M PLAYING YOU!


Show me a Python implementation of the BitCoin blockchain and explain how it works.


You didn't write this paper though.


The one that's misleading?


The ledger is decentralized.


It's been designed so that even if you are the developer, you can't change how it works.


The blockchain ensures that all valid BitCoins must be unique.


No you can't.


I assume it's because you don't know the BitCoin mining algorithm.


If I were to ask you to write a BitCoin miner, could you do it?


Like, how does it work?


What does "mine" does?


GPU's gonna be running at 100% load though.


And we need someone who's computer is capable of multiplying matrices of insane sizes.


We might need to add more layers, though.


Then, we construct a simple 3-layered neural network and pass the data through.


We could simply create a giant vector in which each element represents the number of occurances of each item in `lwords`.


Or, I have a better system.


I could try to make something up that could work.


Can Pooper can just track the rate of words and try to make a guess.


We can just have a selection of common words that appears more often that usual when a specific topic is up.


You can also use Python, but it would be around 1000 times slower.


Since it's technically C++, I could build a Python binding so that you can control it from Python.


In other words, it's C++, but it runs on the GPU.


It's a GPGPU compute language that allows you to run *kernels* on NVIDIA GPU's CUDA cores (hence the name).


It's best done in CUDA.


Since I have a NVIDIA GPU, maybe we can run a neural network to track topics.


I guess we could do a deeper analysis of the message history of the server.


So, we could come up with the Ghizali Hypothesis:

> Mazin Ghizali will cause a server activity to rise


Maybe it's because Mazin joined.


<@672892838995820553> G9DE has hit the highest activity rate since last Wednesday.


1 total messages today.


This weekend might be enough to kill the server entirely.


0 total messages today.


<@672892838995820553> 13 total messages yesterday.


<@628672513345454122> Imagine talking to your coworkers and boss in the lobby.


I don't have one.


But either way it doesn't matter.


Mazin leaving could also be a cause.


That's because Neng is dead.


Programmers only seems to be dead.


C seems so easy and hard at the same time.


<@593106116821647363> So, what's new?


And playstation if I'm not mistaken.


For everyone else it's free on Steam.


CSGO is 30 bucks only for Xbox users.


No he's playing on Hypixel.


@.FHDHGNGN What's exercise1.py?


Good morning, programmers.


@.FHDHGNGN Wanna join?


Not to mention string manipulation is an absolute nightmare.


Scratch kinda resembles a game engine to be honest.


But yeah if you're talking about basic C I guess it's a good first language.


The standard library is also very minimalistic.


For example, C doesn't have a string type. You're expected to use arrays of characters.


The main issue a lot of people have with C is that it's very barebone and understanding some of the design philosophies of C requires understanding computer hardware.


Yeah, it seems like a lot of languages are deriving themselves from C.


So, I guess JavaScript is best first language then.


Oh yeah static typing and stuff.


And another month convincing you to use Git.


I remember spending weeks convincing you to use GitHub.


I think I got to like lists and dictionaries.


I didn't learn much of Python before moving on to Java.


Also, by the way, NVIDIA emailed me about their Keynote and Developer conference today.


That's what I would've recommended.


Just asking, why did you choose C# as your first language?


It has syntax that may resemble OOP, but it's not really OOP in my opinion.


Technically, Rust doesn't have OOP.


We're planning to use either Python or C# (since I don't know how to make a JIT compiler/interpreter).


Technically, only I have resumed development since Neng is still working with Python.


Me and Neng: can't imagine world without OOP.


Just so you know the Nengine's development has resumed.


So, how's the Terraria modding going?


<@593106116821647363> So, anything new?


I'm also here.


Alright folks I'm gonna update the projects page for our website since the bots are discontinued.


<@672892838995820553> <@672892838995820553> <@672892838995820553> <@672892838995820553> <@672892838995820553>


Also, we could just do C++++--++


But they didn't trademark it so...


Okay, so apparently C# got it's name from "C++++".


For some reasons C#'s Wikipedia page shows up in the side when you search "c++++", despite it not containing the term "c++++" at all.


I've never seen anyone refer to C# as C++++.


But you're an organization owner, which allows you to do whatever you want to it's repositories.


Sorry I tried to avoid a ping.


@.FHDHGNGN @.progamrer You are both allowed to change the specs by the way.


`apt` >>> `brew`.


You know you can change the specs anyways so...


Proposal:

var:
```
let mut name = 1;
```
into
```
variable name: int32_t = 1;
```

let:
```
let name: int32_t = 1;
```
into
```
immutable name: int32_t = 1;
```


Okay, give me a better idea.


Or `let mutable`.


`mutable let` for mutables.


I'm gonna use `let` since everyone's using it.


Also, this can be changed later so...


Or what format?


Which one then?


Okay, I'm gonna go with the top one then.


Also, by the way, which format do you prefer?
```
string name = "Neng Li";
```
```
let/var name: string = "Neng Li";
```


Resizing terminal windows. 👍


You should contribute to it.


Anyways, how is the C++++ specification so far?


<@672892838995820553> So, what are you doing right now?


English
```
Import the module named iostream.

Create a function named main with no parameters that returns a 32-bit signed integer.
This the beginning of function main's body.
    Call function print of the iostream module with parameters "Hello, World!\n".
    Return 0.
This is the end of function main's body.
```
C++
```cpp
#include <iostream>

int main()
{
    std::cout << "Hello, World!\n";
    return 0;
}
```
C++++
```
extension StandardIO;

using std::io::print;

function main(arguments: std::vector<str>) -> int32_t
{
    print("Hello World!");
    return 0;
}
```


This is what Userbenchmark has to say about it.


<@672892838995820553> I also found your CPU's spec sheet.
https://ark.intel.com/content/www/us/en/ark/products/84984/intel-core-i55250u-processor-3m-cache-up-to-2-70-ghz.html


Anthony has 4, while I have 8.


On Google search.


<@672892838995820553> Also, I just found out we got five impressions.


Anyways, I'm gonna start writing a new language since I'm bored.


And they use grammar as well.


Wow they actually responded!


<@672892838995820553> So, did those people respond?


I can't hear you at all.


<@672892838995820553> Am back.


Anyways gotta eat I'll come back later.


So that explains the mic issues.


<@672892838995820553> Are you on the Windows computer?


<@672892838995820553> Your mic is producing weird sounds.


<@672892838995820553> <@672892838995820553> <@672892838995820553> <@672892838995820553> <@672892838995820553>


And it seems like we got two impressions.


Also, by the way, I got this email.


And the macOS themes also looks much better as well.


Feels much more modern.


Okay, I updated to Kubuntu 22.04.


<@672892838995820553> You back from the amusement park?


<@628672513345454122> What's up?


How about a giant can pooper?


<@628672513345454122> Join VC.


<@593106116821647363> I assume you have made it back to Ontario.


<@672892838995820553> You still sleeping?


Why leave then?


Had to go?


So, we need to look for more people that's into programming?


Yeah so that people have a reason to join.


That kind of reflects my workflow but at the same time it doesn't.


The only thing I know about calculus is how to find the derivative of a function.


Technically, multithreading is the reason it's using over 98% of your CPU.


<@593106116821647363> So, what are you doing right now?


Yes, it's the first result that comes up.


<@&989190880332234752> Should we revive the Pooper Times now that Jay's server is back?


Yes or no?


Yeah, they're both Anthony's alts.


FHDBot is online again?


Similar thing happened to me with the chess game, but I forced myself to finish it anyways.


<@593106116821647363> What's up?


Oh that TikTakToe thing.


What new project?


As for Anthony, no one knows.


Neng is indeed in China.


Okay, it's been confirmed.


Until the others comes back, of course.


Anyways, it seems like we're the last of what remains of the Li Institution.


The whereabouts of Anthony is unknown, but it is very likely he's trolling.


It seems like that Neng is currently in China and unable to access us right now.


Good morning, @everyone.


But none of them are considered to be **the** C++ compiler.


There are C++ compiler**s**.


There is no "the" C++ compiler.


*The* C++ compiler?


Usually, the compiler is precompiled.


That's not what you usually do when you work with C++.


It's using 100% of my CPU.


<@593106116821647363> I'm compiling a C++ compiler with itself.


By the way, here's the screenshot for the email if you're curious.


So, both possibility seems likely.


Then again, if he's going to China, he probably would've gave us a heads up.


If he's in another country (presumably China), it could explain why he was offline the whole day yesterday.


Either he's staying up late or he's in another country.


Also, Neng emailed me last night at 1:13 AM.


He hasn't done that yet though.


So, if he stops trolling he'll just join through the website.


Wait, I think we still have an invite link on the website.


He left the server and blocked me.


Plus, I don't think he even can anymore.


Doesn't seem like it.


He usually stops trolling within 48 hours.


Don't worry, he'll eventually get out.


<@628672513345454122> Bruh, why am I blocked?


But you can still find them used for half the price. <:can_pooper:987033734773612574>


Unfortunately, NVIDIA had cut production of the 1080 Ti years ago.


It's literally the only one in stock.


Radeon Pro is probably a better option.


I generally don't have a good experience with NVIDIA GPUs on Linux.


I have an Epyc CPU with 4 RTX A6000s.


Y'all are still using consumer-grade hardware. 😹


It's so simple that you can implement it in less than 10 lines of code without any weird syntax.


It's a pretty simple algorithm.


You could implement Axis-Aligned Box Collision.


Another possibility is that it just produces an error telling you that you don't have permission or something.


I think so.


<@628672513345454122> <@672892838995820553> Good morning, progamrers.


<@672892838995820553> Am back.


I just realized that I should've listened to the Rust Compiler instead of just getting around it with `unsafe`.


Procedural programming is a programming paradigm, derived from imperative programming, based on the concept of the procedure call. Procedures simply contain a series of computational steps to be carried out. Any given procedure might be called at any point during a program's execution, including by other procedures or itself. The first major procedural programming languages appeared circa 1957–1964, including Fortran, ALGOL, COBOL, PL/I and BASIC. Pascal and C were published circa 1970–1972. Computer processors provide hardware support for procedural programming through a stack register and instructions for calling procedures and returning from them. Hardware support for other types of programming is possible, but no attempt was commercially successful.


<@672892838995820553> So, now what's the plan for the Nengine?


You can also get this skin.


And how was it?


And we also planned to cut down the features of the Nengine.


Me and Neng had a few voice chats mainly discussing matters around Rust and the Nengine.


So, it's just the three of us for now.


Well, Daiwik is on his way to New Brunswick in case you are unaware.


I've already abstracted all the OpenGL away so technically I'm not really using OpenGL anymore, just a library that I wrote on top of OpenGL.


Wait, is it immediate mode?


But then again, it's not an immediate mode rendering API, so I guess that makes it harder.


I find that quite surprising given the high-level nature of PyGame.


We shall discuss what we will remove in the conference tonight.


We're gonna remove some features from our plan.


Not be too ambitious.


Anyways, I'm thinking that we scale back the Nengine project a little.


He's flying the American flag in Tiannanmen Square.


I guess that explains your downtime recently.


You made it?


!steal carl_bot https://cdn.discordapp.com/avatars/235148962103951360/ed3dac3b6e7a851df781632a4295fcb9.png?size=4096


`ls -l | grep can_pooper.py`


<@593106116821647363> Anything new?


<@672892838995820553> What's up?


I do not believe in horoscopes.


<@672892838995820553> So, what are you doing right now?


And he's using Code?


Also, I can't help but notice you've been using Code for 23 hours.


It was something about C strings and null-termination.


Anyways, <@672892838995820553>, I fixed the issue with the projection matrix.


It turns out that the problem had nothing to do with NVIDIA's drivers.


I was wrestling with NVIDIA's trash Linux drivers.


<@672892838995820553> What's up?


Yes I am back.


And now, I'm going outside.


Just got back from eating dinner.


Anyways, from my understanding, it will probably be very difficult to get Rust and Carbon to work together since they don't implement interfacing mechanisms with each other.


Okay, so Rust has the `#[no_mangle]` thing, but that's mainly for compatiblity with C.


Carbon explicitly stated that they won't be having a standard ABI on their GitHub repository, and Rust (last time I checked) does not have a standard ABI either.


Technical explanations aside, it's just something that lets multiple compiled languages (like C or C++) to work together seamlessly.


Both the Carbon and Rust people.


I thought they said they won't be implementing any standard ABIs.


And it would be hard to port all of that onto Carbon.


In a few years, the Nengine would be a massive Rust codebase.


...and if it's actually production-ready (which it's not).


<@672892838995820553> Working with PyGame again?


Code review is basically where people sends him their code and he reviews the code.


Watching this.
https://www.youtube.com/watch?v=1W1FtRaY69Y


Technically, panics are different from exceptions in the way that you can catch and handle an exception, but panics will cause your program to crash immediately.


(Of course, you can always train your models locally if you have a big enough GPU).


Cloud-based machine learning models.


For which class?


<@672892838995820553> Doing homework?


<@672892838995820553> You should check out AI Dungeon.


But it did, and that's all it matters.


To be honest, I did not expect this to work.


`.fs` is the extension used by GLSL to denote a **f**ragment **s**hader, but F# also uses that as well so I guess the Rich Presence got confused.


Writing the shaders right now.


No, I'm working in GLSL.


By the way, colours are working as well.


<@672892838995820553> When are you going to open your dashboard to the internet?


(Unlike in C++).


Also, I like how in Rust the function defintions are order-independent.


How much it took:
https://github.com/Hello56721/wars/blob/main/src/graphics.rs


I wrote the `draw_colored_quad` function myself.


583 lines of Rust code.


<@672892838995820553> Rectangle in just 2 days. 💪💪💪


<@672892838995820553> `graphics.rs` has 18 warnings. 😹


I'm gonna continue the Wars game.


Who wrote the HTML for the dashboard?


You're writing a server to host a dashboard?


Another Hazel Engine clone.


Also, the number of unsafe blocks in the graphic file worries me.


Anyways, the graphics file alone is already 370 lines of code.


The functions are the same on Rust, it's just the language that's different.


I have experience with OpenGL with C++.


<@672892838995820553> I'm almost at 300 lines of code. 😳


Okay, screw trying to make the renderer without proper abstraction.


Bruh, I went into the effort of importing C's alloc and free functions before finding out that Rust comes with them built-in (they're unsafe though, obviously).


I have to use a bunch of hacks to get it working since it's a C library by nature.


<@672892838995820553> Okay, OpenGL in Rust is like, super painful.


(Also we'll be creating safe abstractions on top of the unsafe blocks anyways so I doubt we'll be working with unsafe code a lot).


Plus, if we encounter a segmentation fault, at least we can narrow it down to one of the unsafe blocks (which we can't in C++ since basically everything's unsafe).


But unsafe Rust was originally created so that Rust programmers can interface with hardware so...


It kind of is.


Also, I just realized that since we'll be interfacing with hardware, we'll be using a decent amount of unsafe Rust.


None of them are basic 2D immediate mode batched renderer using raw OpenGL though.


The renderer I'm going for right now is a basic 2D immediate mode batched renderer.


Also, I'm still having trouble implementing a renderer in Rust.


Okay, I'm having some trouble thinking about how to implement the renderer in Rust.


So I have to use `unsafe`.


Bruh, OpenGL's unsafe in Rust.


<@672892838995820553> Rust's version of GLM doesn't have orthographic projection matrix. 😾


<@672892838995820553> How does this look so far?


It looks weird, but it works.


Okay, I managed to get Window centering to work.


Okay, Rust is rather different from C++ and I'm having some trouble getting used to it.


This library is only 64 lines of code. 😹


Found one:
https://github.com/maeln/gl_loader


Anyways, I'm looking for a good binding of OpenGL for Rust.


To get familiar with Rust.


Yeah, that's why I'm making a project.


Or I could resume the development of the Nengine right now.


How is it "bruh"?


<@672892838995820553> So, while I wait for your completion in the Rust book, I shall begin a Rust OpenGL project.


You do need to manually *allocate* memory if you're going to allocate on the heap, but deallocation, move semantics, and other memory related operations will be mostly automatically handled by the ownership system thing.


Pretty much every language has a concept of stack and heap (except for Python and JavaScript, which has a heap but no real stack).


📚 ▶️ 🏊‍♂️ ?


<@672892838995820553> What's up?


<@672892838995820553> <@672892838995820553> <@672892838995820553> <@672892838995820553> <@672892838995820553> <@672892838995820553>


Bruh, we're literally out of sync.


I'm here now.


<@672892838995820553> Having a Zoom meeting?


At least you understand ownership, right?


Yeah, some of them are kinda long.


You got to ownership?


We have only one computer at home.


And what kind of dashboard?


What does it do?


<@672892838995820553> What's dashboard?


Oh yeah right.


Well, I guess we could either resume the development for the Nengine right now or spend more time getting prepared.


By the way...


<@672892838995820553> This is defined. 👍 
```rust
trait A {
    fn h(&self) {
        println!("Hello, bozo!");
    }
}

trait B {
    fn h(&self) {
        println!("Hello, bogo!");
    }
}

struct Neng {}
impl B for Neng {}
impl A for Neng {}

fn main() {
    let neng = Neng {};
    neng.h();
}
```


Bruh, Unreal Engine got stuck.


In fact, almost every C library I have used is available in Rust.


Speaking of Rust, I just found out you can use GLFW in Rust as well.


Then, I'm done the Rust book.


After that, it's the web server project.


Anyways, I'm now on Chapter 19 of the Rust book.


Bane of Anthropods.


<@672892838995820553> By the way, what are *you* working on right now?


It's the command line tool thing.


Rust book project.


Is your parents okay with you playing with sink seals?


<@672892838995820553> I am almost done the Rust book.


So, what's new?


<@672892838995820553> Should I post a job listing?


Kind of, but now it's officially on hold.


Speaking of which, are you learning Rust right now?


He uses Unity + C#.


By the way, speaking of Unity, <@672892838995820553>, my brother's joining the Li Institution.


And he's focusing on gamedev with Unity + C#.


What about the others?


That's for me and you to do.


Anthony's not a programmer?


Anyways, since that's on hold, we need to plan stuff for our teams to do.


@everyone So, new updates.

- The **Nengine** will be temporarily placed on-hold for our software engineering team to prepare.


Anyways, it's Monday today.


No one sent any messages.


The server fell asleep.


$$$start_spamming_dm$$$ <@672892838995820553> get online bozo 😹


It probably won't unless you're CPU bound in gaming.


Why did you choose to include integrated graphics?


That's the name of the editor of another indie game engine.


All of them are pretty much the same except for the cooler design.


Actually, there's 214 variants of the RTX 3070.


I don't know.


Like, there's around 50 different variants of the RTX 3070.


Most graphics cards have a bunch of different variants of them.


But maybe he just meant he hate the math classes in the school board.


Weird how he said that he hated math.


Why did you take extra-curricular Math?


Is it summer school or something?


<@672892838995820553> Which Math class are you doing the homework for?


Bruh, does that have to take two hours?


<@672892838995820553> What are you photoshopping?


Bruh, why was there a Quarantine in the first place?


<@672892838995820553> Who's Lisquie?


This is the plan so far.


So, the next thing to do is to implement the event system.


<@672892838995820553> Plans for the Nengine (incomplete)
✅ Engine Core
⬛ Event Handling system.
⬛ Scene management system.
⬛ Layer system (maybe).
⬛ Windowing system.
⬛ Integrating Event handling system with Windowing system.
⬛ Input polling system.
⬛ Asset loading system.
⬛ Rendering system (not sure how this is going to go yet).
⬛ UI system.
⬛ Audio system (again, not sure how this is going to go yet).
⬛ Entity-Component system and scene hierarchy.
⬛ Editor???
⬛ Asset management system.
⬛ Scripting system?
⬛ DirectX support?


Like, the scripting interface for C#?


What do you mean?


Gonna create a dev branch for the Nengine.


Anyways, I still have like a few minutes.


Probably some time around 9:00 PM or so.


I have to go outside.


When the zip filename ends with `-master` and a corresponding repository doesn't exist on his account, it's probably downloaded from somewhere else.


Also, I like how you don't have to restart every time you install, update, or modify Visual Studio (like you have to do in previous version) anymore. <:can_pooper:987033734773612574>


It's literally foreach.


It must be Swift given how much you hated JavaScript.


I worked with scratch before Python.


First real language.


Even with Rust, system programming is still very different from scripting.


This doesn't look good so far.


So I'm taking bunch of script programmers and having them do system programming.


Or anything more sophisticated than mainly behavioural scripting.


Or like a browser.


So none of you ever worked on a project like a game engine before.


My chess program is somewhere in the 5000s.


Oh yeah you don't work on large projects with 1000+ lines of code.


Mine worked out of the box for some reasons.


I thought we got it working once.


It is based on Ubuntu, which is based on Debian.


Do you think you should get back to Rust?


Are you still at the guessing program?


<@672892838995820553> Rough plan for the windowing abstraction.
```rust
struct Window {
    width: u16,
    height: u16,
    // etc.
}

impl Window {
    // Creates a new window
    fn new(width: u16, height: u16, title: &str, is_maximized: bool, is_fullscreen: bool) -> Window {
        // ...
    }
    
    // Shows the window
    fn show(&self) {
        // ...
    }
    
    // Returns if the window is still open
    fn is_still_open(&self) -> bool {
        // ...
    }
    
    // Must be called every frame
    fn update(&self) {
        // ...
    }
}

impl Droppable for Window {
    // Automatically called when the window variable goes out of scope
    fn drop(&self) {
        // ...
    }
}
```
Note that the event handling functions have not yet been added.


It's the skeleton of our engine.


<@672892838995820553> How's this so far?


Of course, I'll have to keep track of what members have been assigned a name already.


By iterating through all the names and assigning them to random members rather than iterating through all the members and assigning them random names.


I also found out how to make the names more even.


<@672892838995820553> Brimstone ^^^


He's trying to spell out.


That man never stops writing to GitHub.


You are more active on GitHub than he is.


So that GTK+ programs will actually work instead of just displaying an error.


I can't remember the last time I booted Windows.


Try switching to Linux for a length of time.


You just delete the partition containing the operating system.


<@628672513345454122> Are you joining or is <@672892838995820553> joining?


One of you join.


Okay, I deleted the entities folder.


Reset entity data?


If it won't respond?


So how am I supposed to kill all the arrows?


And it won't respond to any commands.


So, the instant someone joins the server TPS goes to 0.


But I wasn't online.


I need someone to join for the entities to load.


Oh yeah, right.


Why would you want to worry about getting API banned?


I would probably recommend using repl.it instead.


That's probably gonna cost money.


In C++ you can, and it causes a bunch of bugs that will take you hours to diagnose.


And it's a good thing that you can't read and write to a location at the same time.


I really doubt you really have to worry about memory safety at all in Swift since it's all automatically handled.


That's data race protection, not memory safety.


By the way, how's the Tic Tac Toe thing going?


What are you SSHing to?


<@672892838995820553> Why are you idle?


<@672892838995820553> Your server is online, join now!


<@672892838995820553> The server's running at 0 TPS. 💀


You're probably surrounded by single-colored maps.


They are loading in.


Since there's no authentication system, everything's tied to usernames.


So, uh, on cracked servers, you can log into the server with other people's usernames to play as them.


He's the one who logged in with your username.


I thought that was DeepSlate.


Wow, it penetrated every layer of stone and made it to deepslate level.


He's on phone.


I'll handle the low-level parts.


So, maybe most of the engine would be written in Rust, but the components that interacts with hardware are going to written in C++.


Vulkan is a C API and getting it to work in Rust would require some trickery.


Vulkan or OpenGL?


2D or 3D?


C, C++, or Rust?


Li Engine, SCP Engine, or Nengine?


<@672892838995820553> Where did you go?


It's just OpenGL but with Swift and little more low-level.


What's so fearful about Metal?


And your entry into Metal.


In that case, the short answer is *no*.


Oh, so you meant *storage*.


I was thinking about creating an assets folder for the chess program, but since everything's already in root...


Is that all you know about Calculus?


You don't know what a derivative is?


At least you know what a derivative is?


<@672892838995820553> Also, you have yet to answer a math question I asked you a long time ago.


<@672892838995820553> Okay, now you go onto the site and click "Allow" when it asks you.


The coords were off by like 20 meters.


You can spend a lifetime learning about strings.


And how Windows C++ strings works.


I remember strings in Java are encoded in such a weird way behind the scenes.


So, more like C++.


C strings are literally character arrays.


Thoughout this class of course.


From what I know you won't be learning anything except knowing how to interface with `stdout` in Python so...


I'm neither fat nor ugly.


It uses Electron, which is written in C++.


You have to use it when performance is important.


I can implement it myself though.


Since it's a compiled language.


C++ has no string formatting or interpolation.


It's another form of string formatting.


In Python, it's called *string formatting*.


Though to use the latest version of 3 I had to build from source.


My Linux system came with both 2 and 3 installed.


<@672892838995820553> Is this true?


Amaze everyone by using Linux.


Also, in my experience, my Linux desktop environment (written in Python) is sometimes faster than my Windows desktop (written in C++).


The Python part are just the directors.


But the heavy computing parts are assigned to C++ components.


Yes, if Python does the heavy computing parts.


Half of Linux itself is written in Python, so obviously it's installed by default.


Oh yeah, right.


Most of them seems to possess Chinese heritage.


So, is it correct?


It's the Visual Studio feedback survey.


Microsoft Partnership Program.


Also, <@&989190880332234752>, is this correct?


Windows does not have anything of this sort.


In case you don't know, Linux App Images are basically macOS app bundles but for Linux.


<@628672513345454122> I have finally packaged the chess program as a Linux App Image.


Oh, you mean the Python equivalent of this?
```js
`Yo, this is ${name}, and he has ${networth} dollars.`
```
Python does have it too. It's called F-strings.
```py
F"Yo, this is {name}, and he has {networth} dollars.`
```


Also, who's Logan?


Python's back-end is C so...


Why me and Neng mainly learned stuff by hacking stuff together.


Because you're a programmer.


<@628672513345454122> You're playing Minecraft on Linux?


<@&989190880332234752> I'm back.


See, he's playing (sd-pam).


Also, by the way, <@628672513345454122>, Neng switched to LInux.


I use Thunderbird Mail.


It converts Python to C++ just before running it.


Including my desktop.


Half of the stuff I use on Linux are written in Python.


Linux has Python by default as well.


(Though most token grabbing scripts are written in Python, and most people don't have Python on their computer so...).


But if you use icognito mode or something similar where the token isn't saved anywhere locally, you're much safer.


Because the token is saved in a cookie on your browser.


If you login through a browser, you're still not safe.


And token grabbers just searches for that file and reports it.


However, when you have the Discord desktop app, it stores your token in a file.


The token in the Discord webhook isn't the token of the sender, it's the token of the webhook itself.


Turns out, you really need to have the person run a script on their computer.


I found out a bit more about grabbing tokens.


<@672892838995820553> By the way, remember when Mazin wanted to grab Pratha's token?


It's a really good game.


<@672892838995820553> By the way, you should try (sd-pam).


Everything's called "Mail".


Apple Mail client is also called "Mail"?


Oh yeah right.


But I saw you playing Mail earlier.


Now you're on Mac.


I can tell you're on Windows.


I did it before you revealed yourself so...


Hold on let me try to find it.


You're literally in <#968677013416202260>.


Why are you texting if you're in VCs together?


Some of them might even be 13.


<@628672513345454122> By the way, why are you following random people on GitHub?


Best of all, you can use regular expressions in the `find` command.


Oof, no embed.


Not on weekdays.


Okay, I added queen-side castling support.


So, desktop scripting?


Are you a web developer?


<@672892838995820553> It's time for you to choose.


Linux: no search functionality in GUIs at all.


<@672892838995820553> You there?


<@672892838995820553> You coming?


Neng's coming in about 6 minutes.


Anyways, <@672892838995820553>, you available now?


I assume you failed Grade 9 Academic English.


We're just trying to overwhelm Anthony with nerdism.


I just finished a paper by Roger Penrose about his cyclic cosmology proposal.


Anyways, then you should be able to explain it to Mazin.


Wow, rich man indeed.


You managed to afford 134 VPNs?


No, it's edit history has like 300 people on it.


For example, what's the Dirac Equation?


Most things I have heard of are things most other people have never heard of, and vice versa.


Again, something I've never heard of.


It's one of the most famous things I've never heard of.


<@628672513345454122> You're back?


I'm almost never busy since my mom is always making me go outside during the summer.


Very busy I see.


<@672892838995820553> You there?


<@672892838995820553> So, what are you doing right now?


16:9 is the aspect ratio of monitors. 🤯


<@628672513345454122> can't since he's in Toronto still.


Anyways, I can play Minecraft right now.


Not sure if they all are though.


The one we did at the last manhunt was.


Yeah, considering that Minecraft worlds are symmetrical now.


We should try to beat the ender dragon without manhunts first.


<@672892838995820553> Should we do another manhunt?


<@628672513345454122> I am online.


<@672892838995820553> YOU'RE FINALLY ONLINE!!!


<@672892838995820553> By the way, if you wanna know a little bit more about shaders.
https://learnopengl.com/Getting-started/Shaders


I'll show you later when I have time.


Try watching my stream instead.


Also, <@672892838995820553>, if you want the shader's version of his stream I can provide you with that.


But if you run fast enough you can still escape through the river.


He cleared the forest so you can't sneak away.


He's getting one.


...or kill you by falling.


I can still modify your positions in the player.dat file.


Or burning them down.


No, he's just chopping all the trees down.


He's at the coordinates I accidentally leaked.


He's literally at your coordinates.


It's a reference to the 1984 movie "Neng Li".


<@672892838995820553> <@628672513345454122> Shall we continue the manhunt?


I'll join for the first time.


It didn't though.


I mean the browser plugin that turns every site into dark mode.


But I doubt many people are using dark mode.


It contrasts in dark mode though.


A small one, and one that you probably need to fix.


I added an update.


By the way, check the Li Institution website.


Do you check all of them?


<@628672513345454122> What's your email?


This series.
https://www.youtube.com/watch?v=QAPLs3J3tvY&list=PLLAZ4kZ9dFpOSzRXG05goZMgsvXwDDL6g


I'll link it to you.


That's how I learned it anyways.


You need a least a tutorial series to learn it.


C++ is a pretty advanced language.


Now I know why you give up on C++.


Oh yeah, you learn by hacking stuff together.


You didn't know this?


So in Python, variables are references by default?


If it works, and it's fast enough to be usable, your job is done.


Little do you know it, but most software that you use don't follow good practices.


Avoid using the `goto` in C++.


Anyways, software engineering is just people taking turns presenting their ideas and getting criticised until someone comes up with something that either no one can criticise or is better than all other ideas and no one can think of a better one.


If you have one that is.


<@628672513345454122> Please present your idea.


Though it would result in a massive file that could be too difficult to work with.


That could work as well.


That's my idea anyways.


And allows us to reuse the Python code when we make another adventure game.


Because then it's more organized.


So, what do you think?


And use Python to process those files and load them into objects.


I'm thinking that we load the logic and passages from these files:
```
<passage>
Hello, this is a passage for the story and etc edc
This is just an example for a passage.
Now, choose an option.
</passage>
<options>
<op href="resulting-passage">Do this</op>
<op href="going-down-tree">Do that</op>
<op href="h">Do nothing or something else</op>
</options>
```


I thinking that we should probably data-drive the program rather than hard-coding the passages into the code.


But I usually don't use C++ unless I have a good reason to do so.


I mean, it doesn't really require any advanced C++ features.


Why did you insist we make it in C++ when it could've easily been made in Python. 💀


<@672892838995820553> Remember that text-based adventure game we tried to make?


The military of the Huang Dynasty will be composed of canine soldiers and human generals.


The server console logs IPs of each player that joins so that the admin can IP ban.


Neng's IP is `135.0.110.72`.


<@672892838995820553> This your house?


It saved player positions for some reasons.


No, I downloaded the world and opened it with Chunky.


That's what it looks like?


<@672892838995820553> Bruh, what is this?


Pretty sure haven't deoped you yet.


Can't you ban him?


He's in again?


Soon, you shall become a global superpower.


Metal production is ramping up.


Thou shall not be dependent on I.


The Huang Dynasty managed to industrialise in one week. 🙀


Named your sword?


Unlike last time, this time I've decided to introduce the reader to basic concepts used in the Hello World program before showing them the Hello World program so that they don't get confused.


<@672892838995820553>  How's this C++ tutorial?
https://github.com/Hello56721/cpp-tutorial


Okay, yeah, it's probably BetterDiscord.


I have it on plus every plugin you can download.


Then it must be BetterDiscord plugins.


Like, that button that automatically opens the attachment in a program on your computer when you click it.


By the way, how do you make the <Attachments> thing?


Fake arguing is fun.


Ah, so he is indeed a programmer.


Which makes him a programmer.


Can Pooper wrote code to a file once.


He's a program.


He's not a programmer so he's not in this channel.


It should be "The `italic` value is self-explanatory".


C++ is literally just C but with more features.


`auto yourmom { new Fuckyou() };`


`=`, `{}`, and `()`.


In C++, there's literally three ways to initialise a variable.


It works the same as the equal sign.


Notice the curly brackets instead of the equal sign?


```c++
int main()
{
    auto a { 5 };
    auto b { 6 };
    auto c { a + b };
}
```


Ever wonder why C++ is called C++?


Here's one that adds two numbers together.
```c++
#include <iostream>

int main()
{
    int a = 5;
    int b = 6;
    int c = a + b;
}
```


Other than Hello World, of course.


Have you seen basic C++ programs?


My chess program?


Have you seen enough C++ code to decide that it's a hell language?


I'm trying to design it so that people following the tutorial won't give up from rage quit.


Anyways, <@672892838995820553>, I writing a C++ tutorial because Mazin wants to learn C++.


<@&989190880332234752> Are you guys just going to play Minecraft the whole summer?


Brain utilisation capped at 10%.


Because everything isn't what it used to seem.


How about let's take this hour to actually brainstorm something?


Nobody's brainstorming anything, it seems.


So, we have an idea of the visual design of the engine.


Not gonna lie, that resembles Visual Studio's start screen.


<@672892838995820553> So, now we have to think of how to render the UI elements.


We have to support hiDPI displays so we can't specify the sizes in pixels.


What's a "Metal Library"?


Anyways, to make the editor, we need a rendering system to render the UIs and stuff.


Since the majority of the public doesn't even know we exist.


Well, before we think about visual design we have to think about software architecture of the engine first.


The scripts (which are going to be written in whatever language we choose) only handles the behaviour of objects within the game scene.


Rendering and physics calculations (which are pretty much the only differences between 2D and 3D) are handled by the engine itself.


The scripts won't be doing any physics or rendering calculations so I'm not sure why you would want to do that.


That means we'll have to make the source code of the engine available to developers, but it's already open sourced so I guess that won't be a problem.


We could still add native scripting in the form of Rust.


Rust also doesn't have classes, while C++ uses it extensively for encapsulation.


C++ mangles functions names when compiled, which makes it difficult to call C++ functions dynamically.


I mean, we could write our own JVM, which avoids the licensing issue with OpenJDK.


However, it is very difficult to integrate with Rust.


Web games moment.


Or we could just integrate native scripting like Unreal Engine does.


We might not add Java because of it's license.


Which is why I don't much good reasons to do so.


The primary scripting language is likely going to be either Java or C# (probably C# since Java is still licensed under GPL and that can cause legal issues later on).


We could also add Lua, but I don't see much good reasons to do so.


Maybe a good idea.


(Well, probably not hate, but he sure doesn't like them).


<@672892838995820553> hates C++.


That's the document.


I don't think we need to decide how to pronouce it as long as we each know what we're talking about.


Anyways, I'm writing a document on game engine architecture so that Neng can catch up.


Anthony Huang suggested the Game Nengine.


For one reasons or another.


It's the only language that none of us hates.


And when at least one of us finishes learning Rust.


When we have an idea of what to do.


On Linux it would just be an AppImage so that we don't have to support every single package manager out there.


But I think that making the program installable would be a better option.


Everyone's supporting Rust for some reasons.


So, we're gonna have to maintain two enormous codebases, one of which has only one person understanding anything inside.


I mean, Swift is kind of an Apple exclusive language while Rust runs everywhere so...


For the scripting API and how to use the editor and stuff.


Definitely need documentation.


Sometimes, but it can get boring sometimes.


Without a good website, no one is going to use our engine even if the engine itself is good.


I just didn't use any pronouns.


Why is one of the most important things.


Never written a physics library before but understands most of the concepts required.


By the way, <@593106116821647363>, do you know anything about writing game engines?


Which is why they are similar in terms of messiness.


JavaScript has a similar history as C++ does.


So, after you've mastered Python, are you going to focus on Rust or Swift?


Why I use TypeScript.


And has written Assembly before.


Neng does know Assembly.


Learning more languages gives you more job opportunities.


Python, Java, C++, JavaScript, a little bit of Rust, C, GLSL, HTML (not proficient at), CUDA (not proficient at), Swift (only knows about the syntax), C# (only knows a little bit of the syntax), and GDScript.


<@672892838995820553> So, back to the Nengine.


Intel HD Graphics 3000.


<:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574>


<:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574>


Imagine knowing teachers's full names.


Teacher you mean?


I don't have summer school.


Me and Neng are planning a game engine.


<@593106116821647363> What's up?


Don't mind the typos and the errors.


<@672892838995820553> This should give you an idea of where to start.


I don't use any of them.


No because 1) No one I knows uses Rogers and 2) I don't listen to the news.


Roger's having an outage?


Maybe he's gone for a while.


Because you're literally calling the operating system itself.


Win32 functions are the most low-level system functions on Windows.


This includes creating windows, playing sound, receiving input, etc.


Win32 functions are C functions used to interact with Windows.


Or wait, that's a lot of writing.


Right, <@672892838995820553> ?


But we can import the Win32 functions directly and call them instead.


No it's not.


```rust
extern "C" {
    // Create window function written in C in another file.
    fn create_window(u32 width, u32 height, &str title, bool is_fullscreen);
}

fn main() {
    create_window(1920, 1080, "A Game Made In Nengine", true);
}
```


I just found out that you can call Win32 functions from Rust, which is a very big game changer for us.


Though <@672892838995820553> prefers that we write everything in Rust, so what we're going to write might be different.


<@672892838995820553> You still there?


Those are the absolute basic functionalities of a game engine.


And a way to receive input (like key, mouse, scroll, click, and typing).


We also need scripting capabilities.


It would need a way to create a window to show stuff (obviously).


So, a game engine would obviously need graphics capabilities.


Anyways, jokes aside, I'm pretty sure you don't need to provide credit card information to get BetterDiscord.


I don't know.


Neng has been typing for so long.


`->` does not mean "will". It is the pointer equivalent of `.`.


```c++
mazin_t* maz = new mazin_t(0);
maz->annoy_people();

if (neng.is_angry())
{
    delete maz;
    maz = nullptr;
}
```


```c++
int neng = 0;
delete &neng;
```


```c++
#include <glad/glad.h>
#include <glm/glm.hpp>
#include <stb_image.h>
#include <iostream>
#include <string>
#include <glm/gtc/matrix_transform.hpp>
#include <glm/gtc/type_ptr.hpp>

#include "utilities.hpp"

#include "renderer.hpp"

using chess::renderer_t;
using namespace std::literals::string_literals;

renderer_t::renderer_t(uint32_t p_max_quads, std::string_view p_vertex_shader, std::string_view p_fragment_shader): 
    m_max_number_of_quads(p_max_quads),
    m_vertices(m_max_number_of_quads * 4),
    m_vertices_iterator(m_vertices.begin())
{
    auto vertex_shader_source { utilities::load_as_string(p_vertex_shader) };
    auto fragment_shader_source { utilities::load_as_string(p_fragment_shader) };
    
    auto vertex_shader { utilities::create_shader(vertex_shader_source, GL_VERTEX_SHADER) };
    auto fragment_shader { utilities::create_shader(fragment_shader_source, GL_FRAGMENT_SHADER) };
    
    m_shader_program = utilities::create_shader_program(vertex_shader, fragment_shader);
    
    glDeleteShader(vertex_shader);
    glDeleteShader(fragment_shader);
    
    glGenVertexArrays(1, &m_vao);
    glBindVertexArray(m_vao);
    
    glGenBuffers(1, &m_vbo);
    glBindBuffer(GL_ARRAY_BUFFER, m_vbo);
    glBufferData(GL_ARRAY_BUFFER, m_max_number_of_quads * sizeof(vertex_t) * 4, nullptr, GL_DYNAMIC_DRAW);
    
    std::vector<uint32_t> indices(p_max_quads * 6);
    
    // Initialize all the indices.
    for (auto i { 0 }, vertex_offset { 0 }; i < (m_max_number_of_quads * 6); i += 6, vertex_offset += 4)
    {
        indices[i + 0] = vertex_offset + 0;
        indices[i + 1] = vertex_offset + 1;
        indices[i + 2] = vertex_offset + 2;
        indices[i + 3] = vertex_offset + 0;
        indices[i + 4] = vertex_offset + 3;
        indices[i + 5] = vertex_offset + 2;
    }
    
    glGenBuffers(1, &m_ebo);
    glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, m_ebo);
```


The webhook requires lowercase "i".


idea: Try defeating PyPy in terms of speed.


Or start a GitHub project.


<@845361227093508116> Contribute something.


<@672892838995820553> Also, <@628672513345454122> wants to fire Mazin.


But only Neng can fire people.


Also, why did I even hire you?


I turned off activity status when it started saying "Playing cppsvr --workspace ~/chess --os linux -duf32 -w32 -l2"


Sequential memory is very slow.


Yeah but it's sequential.


DNA is hardware.


Capacitors require highly-conductive materials to make.


RAM isn't made out of steel.


Multi-threading is pretty hard to get right, but it's pretty efficient.


So it's not really low-level programming.


I though Python supports threads as well.


Though it's not gonna be very efficient.


Since it's the easiest to work with.


Okay, I'll just use a single-threaded model then.


<@672892838995820553> Which threading architecture should we use?


I'm talking about threading architectures, not languages.


Which threading architecture should we use?


Okay, game engine it is then.


Anyways, <@&977367551933841480>, any ideas for the collaboration project?


"Tu eres un idiota."

- Neng


ମୁଁ ସମ୍ମାନର ସାର୍, ଭୟଭୀତ ନୁହେଁ |


Who is list and why are they banned?


He's always playing on the server when he's playing Minecraft.


Even noobier:
Italic value makes each letter in the text tilt a little.


I just saw it in someone's code.


Technically, I never really learned about `std::bind`.


And to add default parameters.


So, you use it to rename functions. 💀


Yeah, sounds weird.


I'm pretty sure *bind* is a word.


Apparently, it converts a class member function to a regular function or something.


Up to this point, I still don't understand what `std::bind` does.


It makes your head hurts.


You seem to have a large hate towards C++.


Unlike you and Neng, I don't hate any languages.


He knows what part of programming?


Mazin's still at 0%.


And yours isn't?


I can use either.


He refuses to use it.


And Neng has a some sort of history towards discord.js.


So, most of the ideas have problems.


But dropped support because no one used them.


Unity used to support Python and JavaScript.


Luckily, they aren't using hell C++.


Unity: C#
Unreal: C++
Godot: Python
CryEngine: Lua.


Plus, it uses CPU rendering.


Pygame is a framework, not an engine.


1. We don't know how to set up a cloud platform yet.
2. Too sophisticated.
3. Only one person can contribute.
4. Same problem as 1.
5.1. Only one person can contribute.
5.2. One person would spend most of the time building the engine before everyone else gets to work.
5.3. Not many good pre-built engines that supports a language that neither Neng nor Anthony hates.
6. Not very exciting + disagreement between which Discord library to use.


In fact non of the spaces works at all.


So the zero-width space thing doesn't work anymore.


I guess that can wait until we actually finish the actual engine.


That reminds me that I need to find out how to parse those files in the Nengine.


I have no idea.


Mazin said he's still going to online school.


No he's working.


<@672892838995820553> Are you still in online?


You're still in online?


He's gonna skip like 5 days of school.


I thought that ended long ago.


Oh wait, his trip to Dubai and China?


Your main account is also mainly dead.


You rarely talk.


Except you and Neng.


I don't get excited (though yes I do not have friends).


How about you?


What is up?


I wonder how long it's gonna take before it ends.


<@672892838995820553> What's up?


Also, I found out that you can modify constants in C.


I did not know how to set up ones that are not prebuilt.


For prebuilt ones you don't need to set up anything.


Yes I know.


I did not know you had to use Ruby to set up Jekyll themes.


<#983539124470423553> messaged me.


@.FHDHGNGN Profile picture no longer animated, I see.


Okay, but he's offline.


Neither did <@672892838995820553>. <@672892838995820553> never asks since he's always offline.


Okay, but I did not ask.


Or, it could be that <@672892838995820553> is actually invisible, but you should avoid pinging <@672892838995820553> as when <@672892838995820553> is invisible it indicates that <@672892838995820553> does not want you to ping <@672892838995820553>.


<@672892838995820553> is currently offline. Please avoid pinging <@672892838995820553>, as <@672892838995820553> is currently offline, like <@672892838995820553> always is.


Okay, why don't you explain?


Databasing is often handled by the backend itself, not the front-end scripts.


Not that we made one.


I said we communicated with a backend.


Yeah I know.


No I'm saying we communicated with a backend.


On our website.


The thing with the web hooks.


We have *communicated* with backends before but yeah we never really built any web back-ends.


I mean you could build a backend entirely in Javascript...


Do you even know what a back-end is?


Not sure what's been going on.


I mean, he's barely online these days.


Maybe he's talking about his AWS instance?


Neng does not understand web programming concepts.


(Or on GitHub).


You still have to host the HTML and CSS yourself.


No that's just for the domain name.


You can also set up your own DNS server but that's a lot of effort so...


But I'm planning to use it for future references when working with web APIs so...


Also, in case you are unaware, I replaced the commented out JavaScript on our website with TypeScript and replaced the jQuery code with fetch.


It's released on Youtube just 7 hours ago as of writing this.


Also, unless you're subscribed to Floatplane, it's unlikely you saw this.
https://www.youtube.com/watch?v=kyCJ17oq6kI


But it's pretty simple from what I know.


I haven't used Jekyll much before.


Yes I saw it.'


You bought it?


NVIDIA Keynote in 31 days.


Or we just not care as well.


We need to make them care.


Everyone is offline these days it seems.


Or did I misinterpret your statement?


Also, how did you log into Hypixel with a cracked account?


Okay, that's good.


@.FHDHGNGN I assume you're still on 1.19. Is that right?


So, maybe I'm wrong.


Okay, I can't find the message.


I think you said something like that.


Okay, we will cease all usage of your name and all other related identities.


In my opinion it doesn't resemble the skull emoji at all.


Hold on gotta go eat.


Meaning of 👷: What you reply with when you don't know what to reply with.


Actually more than a month.


It's still a month before the NVIDIA keynote though.


You also use TypeScript as well.


In my field a string is a string stored in a variable so we use the term "string literal" to refer to strings not stored in variables.


Oh, it's just a string that's not in a variable.


System programmmers: *ahem*.


String literals are embedded in the program itself (I'm not talking to a noob so I can say this).


"it's a line of text that programs remembers"


"it shows text to a place that only web devs know where to look"


I'm not a teacher so...


Oh yeah right.


The only other option is sending it through webhooks, but we all know how that went.


That would require server-side programming.


By the way, have you beaten this level yet?


For some reasons.


Autosave every millisecond is an option in vscode.


Not really once it's setted up but I still agree with your point.


And launch configs.


No I use vscode tasks.


Wait, TS is also compiled.


However, since Rust is a compiled language, you can't hot-reload it.


Though if you need more performance than what TypeScript offers I would suggest using Rust.


Yeah, but TypeScript covers most of that.


And HTML and CSS.


So learn TypeScript.


I mean, yeah.


Yes but tapping on the page zooms instead of clicks on my browser.


Since we know Rust now we might wanna do something that spans the entire web stack.


In my opinion unless you're going to use the entire web stack you might as well as just use something like WordPress.


I heard web developers are some of the highest paid programmers, if not the highest paid programmers.


You should consider learning Vulkan.


> Vulkan queues provide an interface to the execution engines of a device. Commands for these execution engines are recorded into command buffers ahead of execution time, and then submitted to a queue for execution. Once submitted to a queue, command buffers will begin and complete execution without further application intervention, though the order of this execution is dependent on a number of implicit and explicit ordering constraints.

- Vulkan 1.3.224 - A Specification


That is a big spreadsheet.


Geometry Dash demons, I see.


In ten years, the Li Institution will own China.


I wasn't there though.


(Not that I know much about math in general).


Rearrange to solve for x and something, I guess.


<@672892838995820553> Looks like you have a lot of homework to do.


And I am being rate-limited in thread-creation.


Not a great experience.


Like, I drove from Calgary to Ontario.


But flying is less painful than driving.


Though now that I've done more research I found out that they're basically the same drivers except that Studio drivers are released less often for stability reasons.


Also, since I am no longer gaming on my system, I am considering replacing the Game Ready drivers with Studio drivers.


<@593106116821647363> Coming back?


I've never done summer school bozo 😹


This is the first thing that came up when I visited NVIDIA's website.


<@672892838995820553> 🧮 📖 ?


Neither can working below minimum wage.


North or South?


By the aliens?


You back in Ontario yet?


<@593106116821647363> What's up?


Sure bozo 😹


You broke a car?


Why were you grounded?


<@628672513345454122> YOU'RE BACK!!!


<@593106116821647363> What's up?


Oh wait he only ghost pinged Lal.


Let me check.


I think Mazin ghost pinged you guys.


RTX 40 series is about to launch soon though so...


**Breaking News: Neng Li returned from China, Ghizali's rumours proven false.**


Mazin said that you were supposed to stay for 2 weeks at least.


So, you went for like what, a week?


He's in New Brunswick right now I'm pretty sure.


Along with the IP and GPS logging mechanisms.


The webhooks have been removed already.


There generally isn't any.


We even went as far as to asking visitors for their GPS location and logging that through the webhook.


A few months back me, Neng, and Anthony decided that it would be a good idea to log visitors' IP addresses in a webhook.


Ah, that explains the delay in reply.


<@593106116821647363> So, what are you doing right now?


So, what can we do until he comes back?


A reliable source tells me he probably won't be coming back until the the end of the summer.


<@712373502501453854> Anyways, Neng is in China right now in case you don't know.


Also, you technically agreed.


He's the carpetmaker guy.


He's the one in charge of the website.


<@593106116821647363> is turning 4 this year.


<@712373502501453854> What's up?


Which one looks the best?


```c++
#define let const auto
#define var auto
```


Hi, NVIDIA shill.


How to draw a simple 2D triangle in Vulkan.


And it's going to be 36 degrees this Thursday.


I heard it's 30 degrees right now.


<@593106116821647363> So, how's New Brunswick so far?


So, I guess we just wait then.


<@593106116821647363> Maybe shouldn't have done that?


Just made it through the Swap chain subsection in the Presentation section in the Drawing a Triangle chapter.


In fact, I'm learning Vulkan right now.


But definitely not delayed indefinitely.


It might be for a while.


Okay, please allow me to remember your conventions.


So, you're *getting* a new chair.


How is it?


<@628672513345454122> You got a new chair?


Like, anytime soon?


<@672892838995820553> Anyways, Are you going to work on the Nengine?


I just logged on.


I tried posting a link to a hidden channel from another server.


Unfortunately, I did not remember your VSCode theme.


You got copilot?


None except for ideological reasons.


So, you're gonna join the SKLauncher squad now?


You spent 30 bucks for a Minehut server?


Plus, me and Neng don't have Minecraft accounts in the first place.


Well, all of our servers are cracked, which effectively prevents them from accessing any of Mojang/Microsoft's servers, which means that the reporting thing won't work.


I can't even play on public servers anyways so...


It's a state of matter in which 3 entangled particles can constantly oscillate between different states without energy.


By the way, `code .` works on Linux without terminal macros.


<@672892838995820553> How's this rendering API I made?


Account hacked. Ignore.


Good. How about you?


I have to carry bricks, so maybe around 20:00 PM EST.


"It's not that important so why bother"?


Or a VM.


Well, you could run can pooper in a sandboxed environment.


<@672892838995820553> What's `consts.py`?


So, Lisp is actually older than C++ for some reasons.


And C++ appeared in 1985.


Seems like it.


So, it first appeared in 1958.


Ironically, LISP is also one of the most oldest languages shown.


AND I WAS WRONG


After all, the slang term "tube" is still used to refer to amateur pornography for some reasons.


Then it's probably designed from the beginning to be a amateur pornography hosting site.


Well, Youtube used to be popular for it's massive collection of amateur pornography, so I guess the developers decided to structure it that way.


Though you'll somehow need to get a CPU compatible with Apple's proprietary M`X` architecture(s).


And get sued by Apple?


Brain messed up.


I'm on Linux and Neng's on macOS.


Also, I'm not even going to distribute as an AppImage anymore.


Line 15-20, Column 18-20.


That's also a possibility.


Like, there's this "You might like" thing down at the lower right corner in your home page that basically shows you repositories similar to what you've been working on and what you've been browsing.


Anyways, I think those people were just browsing GitHub and they stumbled upon your repos.


That was a joke.


Oh yeah, me and Neng spammed your GitHub profile link all over Reddit while you were gone.


No that's for lifetimes.


Wait, I think you can also use `break`, but I'm not 100% sure.


Yes, so you have to return the `if` statement.


(That'll instantly break you out the loop so I don't know why you would want to do that).


If you use the `return` keyword it will `return` the function.


Just return but without the `return` keyword and semicolon.


There's also the enumeration system which is heavily influenced by Haskell.


Yeah, that's legal.


In Rust, pretty much everything can return.


Even `if`s, loops, and scopes.


Essentially, anything can return something.


There's also `if let`s.


```rust
let x = if b == y { 2 } else { 3 };
```


Ever used Rust?


I don't think TypeScript has functional programming language features.


Also, the release build isn't working for some reasons.


<@672892838995820553> I have finished the Wars game.


Very interesting indeed.


<@672892838995820553> Vulkan on Rust seems to work.


It's a 2D game framework like PyGame but for Rust.


<@672892838995820553> You should check out Emerald.


I'm figuring out how to use bindgen.


Bruh, do you actually play that game?


If I have a good reason to do so.


If I have a good reason to do so.


Minecraft: Java Edition.


<@628672513345454122> You have returned?


Good. How about you?


Neng Li's face reveal.


How does having a working computer prevents you from getting an M2?


I'll have to check the dimensions though.


It's kind of like a really thin case for the M2 MacBook Air.


What do you mean?


Limited time only.


It's a MacBook Air skin.


Oh, it uses SDL.


Or was it someone else?


Did you boost that server?


The developers placed the macOS build next to the Windows build since they're too lazy to separate them. 😹


I broke it so badly I had to uninstall and reinstall.


<@672892838995820553> I'm editing a Python game I got from Steam.


Even more bruh.


I don't really get it.


Stuff like these?


Yes, but it got deleted due to inactivity.


I have visited Reddit before.


No, I just like arguing with people for some reasons.


Okay, got it.


Oh, this article.


I can show you in screenshare.


IT'S LITERALLY TAGGED "PSYCHOLOGICAL HORROR".


Have you actually visited the steam page?


Why don't you actually verify my screenshot before randomly making assumptions?


You can literally visit the Steam page yourself.


<@628672513345454122> This is what it says on the Steam page.


Well, it's psychological horror, so whether it's scary or not really depends on you.


Because it constantly tried to break your PC.


Some people had to go through months of therapy after playing it.


No, it's the scariest game I've ever played.


I guess, since it's psychological horror.


<@672892838995820553> Have you ever played Doki Doki Literature Club?


Actually, it's `use std::io`, which Rust inserts by default anyways so you don't actually have to do that.


The programming language.


Doing stuff with Rust.


Can't right now.


But you can still change it yourself.


Technically I can't stop you from changing your name to whatever you wanted to be.


You have an FPT this early?


By the way, <@593106116821647363>, how's Rust so far?


It's in C++, but you should be able to get the concept.


Anyways, this guy made a video of how to implement C# scripting.


That's what "embed" means in this context.


Basically using it for scripting.


You can embed C# code, but it will not be deeply integrated.


About as well as C.


Also, we need the editor to be deeply integrated with the rest of the engine, which is written in Rust. C# can't really do that.


However, we are building all the UI elements from scratch, so either way we won't be using any of C#'s GUI functionalities.


Okay, so `let` just means immutable. Here's what `const` means.

Let's say that you create a const.
```rust
const FOO = 25;

fn main() {
    println!("{}", FOO);
}
```
The compiler converts it to this.
```rust
fn main() {
    println!("{}", 25);
}
```
At first, it might look like C++ macros. But here's the difference: C++ macros are replaced mindlessly. In Rust, `const` values are evaluated before being replaced. To demonstrate this:
```rust
const FOO = 5 * 5;

fn main() {
    println!("{}", FOO);
}
```
The compiler converts it to this.
```rust
fn main() {
    println!("{}", 25);
}
```
Because of this, the value of `const` values must contain enough information for the compiler to evaluate it at compile time.


He's used to `let` being mutable.


`let` just means that the variable cannot be changed after it's created.
`const` means that the value of the variable must be determined at compile time.


macOS and Linux must use different binary formats.


It was because the Windows build was queued to go after the Linux build was done


I found out why the Linux build finishes before the Windows build.


By the way,


I have a separate partition with a pirated version of Windows installed and they didn't even care.


Also, it seems like Microsoft is abandoning piracy protection on Windows.


But some distributions are on Wayland.


Applications written for X11 won't run on Wayland, and vice versa.


Note that Linux desktops are split between X11 and Wayland, which are incompatible with each other.


So, I think we can start by supporting Linux with X11 and gradually move onto other platforms.


Since gaming on macOS isn't really that popular.


Also, by the way, I found out that we don't have to use Metal to support macOS.


<@672892838995820553> So, you're finishing up PyUDP now?


I had to use `.then()` when obtaining a member or something similar.


With the `.then().catch()` stuff.


You use it a lot in discord.js.


Since non-ferrous metal do not rust.


<@628672513345454122> You might recognize this.
```rust
let pipeline = GraphicsPipeline::start()
        // We have to indicate which subpass of which render pass this pipeline is going to be used
        // in. The pipeline will only be usable from this particular subpass.
        .render_pass(Subpass::from(render_pass.clone(), 0).unwrap())
        // We need to indicate the layout of the vertices.
        .vertex_input_state(BuffersDefinition::new().vertex::<Vertex>())
        // The content of the vertex buffer describes a list of triangles.
        .input_assembly_state(InputAssemblyState::new())
        // A Vulkan shader can in theory contain multiple entry points, so we have to specify
        // which one.
        .vertex_shader(vs.entry_point("main").unwrap(), ())
        // Use a resizable viewport set to draw over the entire window
        .viewport_state(ViewportState::viewport_dynamic_scissor_irrelevant())
        // See `vertex_shader`.
        .fragment_shader(fs.entry_point("main").unwrap(), ())
        // Now that our builder is filled, we call `build()` to obtain an actual pipeline.
        .build(device.clone())
        .unwrap();
```


However, although Rust is syntactically similar to C++, the language itself is pretty different.


So, around halfway through the entire book.


Chapter 10, Section 2.


<@672892838995820553> So, you're onto Rust now?


Which website are you scraping?


What does it do?


<@672892838995820553> Also, how's PyUDP?


When you have a single tab open that single tab takes up the whole space on the top.


No on the desktop.


Safari has a weird tab design that might take some time to get used to.


Pretty good. How about you?


I interviewed Anthony Huang after his Linux challenge to tell us about his experience while using Kubuntu. Here are his responses.

**Q: What did you liked best about Kubuntu?**
A: It felt like Windows but sometimes faster.

**Q: What did you disliked the most about Kubuntu?**
A: KDE Store errors, sometimes there were random crashes and the KDE Daemon would pop up like ten times to authenticate myself. Also, screen recording with Geometry Dash is shit.

**Q: What new things did you learn while doing this challenge?**
A: KDE is good.

**Q: Overall, how was your experience with Kubuntu?**
A: 8.5/10 compared to windows 9.25/10 so very good.


I'm estimating that we'll spend around 70-90% of the time working in Rust.


The libraries for the scripting languages won't take long at all.


We might have the editor be written in another language if that's necessary but if everyone's onboard with Rust we'll just write it in Rust.


To work on the Nengine itself, yeah.


Though we do need more system programmers since that's the biggest part of the Nengine.


We don't even have a decent plan of the internal code architecture yet so it's still unclear who's doing what.


Okay, whatever you say.


AND THEY'RE ADDING WINDOWS FOUNDATION CLASSES SUPPORT IN RUST!!!


🙀 🙀 🙀


DirectX 12 for Rust. 🙀


They even created a crate for Windows development!
https://crates.io/crates/windows


That's one of the ways you can return in Rust.


But yeah, that's allowed in Rust.


I should probably use `return true;` instead to avoid confusion.


They rewrote parts of Word in Rust.


They share only one functionality, and that is compiliation.


It's vastly different from CMake.


It's like `npm` but for Rust.


Because I thought you might know more.


Because you know as much about cargo as I do.


<@672892838995820553> Why does cargo build faster on Linux than on Windows?


Oh yeah we really need to start coming up with non-random titles.


But wait Daiwik is learning Rust so that might not happen.


If that happens we're down to just one software engineers.


Or what caused you to stop learning?


Why did you gave up?


So I decided, why not use it?


And I found out that it's very fast.


The reason I even looked at Rust was because you picked Rust.


That's the official tutorial.


He ran a Windows ransomware through Wine.


And are setted up differently.


Servers have different process trees than desktops.


They're targeting servers though.


Have you tried Ctrl+Alt+F4?


So you can probably remove it easily if you ran it through Wine.


Ransomware doesn't work properly on Linux.


Okay, try pressing Ctrl+Alt+F4.


Okay, hold on a sec.


(Or at least how I would do it).


Here's what to do.


They aren't all that common though and mainly happen on Intel graphics.


I have experience instabilities with KDE before.


There's a native version on Linux?


You mean GIMP?


~~And because Photoshop doesn't work on Linux~~


That does not prevent you from opening a browser.


Both of which you know how to do.


You could've either edited the elements or photoshopped it altogether.


How about tell me which channel it was?


Well I guess you can't provide evidence.


Right click on message and select "Copy Message Link".


I'd believe you more if you give a message link.


I saw the repository archived.


But if you insist it's probably Python.


I don't have one.


Also, I'm not familiar with PyGame but I am with OpenGL.


1. OpenGL + C++ is a very bad combination.
2. I did that because I wanted to know how far I can get without any software architecture.


When did I say that?


Bruh C++ ain't my favourite language.


No I just logged on.


<@672892838995820553> I had to convert my entire project to an ESM module to get the library to work.


This is not good.


Okay, I reverted all of my changes.


Okay, that library is what's been causing the problem.


I CAN'T LOAD MODULES?


The array is shuffled after each reset.


It minimizes repeats.


Once the array is empty, it's resetted.


So what I'm doing right now is when a name is used, it's popped off the array.


But it caused repeats.


That's what I did earlier.


Yes, but my code relies on shuffling.


Also, this has the functions I need.
https://www.npmjs.com/package/array-shuffle


TS compiles into JS anyways.


Okay, I needed a better shuffle function.


Oh wait the bot crashed 😹


Okay, let's try something else.


Okay, rate limited again.


In TypeScript, floats and ints are the same thing apparently.


Okay, I will not add delay then.


Bruh, is my bot being rate limited?


Wow, this is taking a long time.


And it works. <:can_pooper:987033734773612574>


<@672892838995820553> StackOverflow proposed a better solution.
```js
function freeze(time: number) {
    const stop = new Date().getTime() + time;
    while(new Date().getTime() < stop);       
}
```


But it's probably not consistent.


I'm not sure how long on a 10700K with Node 16.16.0.


That would depend entirely on the CPU and exact Node version.


<@672892838995820553> By the way, I found out how to wait in TypeScript.
```js
for (let i = 0; i < 9999999; i++) {}
```


I believe you are falling behind in Rust.


So that there's 30.


Or I can copy my favourite names.


Well, there's 30 members but only 20 names.


BRUH WHY IS THERE STILL 3 KILLJOYS.


I'm trying to improve the probability distribution.


Bad probability distribution.


🦀 🦀 🦀 🦀 🦀 🦀 🦀 🦀


We can also build Li Institution towers in every major city and take over the world from the inside out.


Everyone except UK and US was on the bloc.


It was also the year China opened up to foreign investors.


Wasn't that what happened in 1976?


When you buy them, you get an image of a GPU in your inbox.


And try to pretend that they're real GPUs.


There's a bunch of scams on ebay where they sell pictures of GPUs.


Plus, I can mine crypto with it instead of selling the card itself.


I have only $0.00.


I'm serious. This is real.


!steal kubuntu https://cdn.discordapp.com/attachments/978304385895522324/996148223255261254/spinkubuntu.gif


That's the source?


I can tell.


<:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> 
<:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574> <:can_pooper:987033734773612574>


Been spamming Neng's DM for a while now and he still haven't blocked my bot.


Anyways, gotta go.


Yeah because it's native on Windows.


Well, I mean, vanilla Geometry Dash works perfectly on Linux.


<@628672513345454122> What do you mean by "oh wait i completely forgot, the challenge lasts for one week"?


$$$start_spamming_dm$$$ <@672892838995820553> take this ratio bozo


Bash is mainly built for system automation, while Python is a programming language.


Though bash is kind of different from Python and are built for different things.


Which is why Python's almost always installed by default on Linux.


In fact, most distributions have large portions of them written in Python.


Yeah, Python's on Linux.


What do you mean by that?


In fact, Unity also works perfectly on Linux (last time I tested it, of course).


Given the context, I assume you mean Unity Scripts, and if that's the case, then yes.


Sorry, I was AFK.


It's probably Aterno's load adjustment system.


Do you want me to do it?


Basic WASD movement.


Do they fight each other though?


I got them all too.


Apparently, a 10700K with a 1660 SUPER is more popular than I thought.


<@628672513345454122> Bruh, my setup is on the Sodium CurseForge page.


Just usernames with inventories and locations tied to them.


There isn't really a concept of "cracked accounts".


You mean you can join with my username and play as me?


And somewhere near the beginning he spent a full day customizing his desktop.


He actually managed to get all of his games and most of his peripherals working correctly.


<@593106116821647363> Anthony is around half-way through his Linux for a week challenge.


Anthony's starting the neutral face emoji trend.


Prove it by going to the Li Institution website and clicking "Allow" when it asks for your location.


<@628672513345454122> Neng wrote this in Rust.


That destroyed a lot.


That might be useful.


What does that do?


Yeah, I know.


More like Riot-style graphics.


It's none of their business.


My school doesn't give out report cards.


Also, it constantly enforces a pascal case style for `struct` names for some reasons.


It only has `struct`s.


In case you don't know, Rust doesn't have `class`es.


Reading more documentation.


Are you lagging behind on this?


What you basically do is summon an arrow that does zero damage on top of the attacker and assign the owner of that arrow to the mob that you want that mob to attack.


At least I understand the concept.


I already know how to do that.


How do you make one?


All I did was just constantly summoning charged creepers.


I didn't actually know how I made it.


`[Entity Batching] 16 draw calls / 16 render types = 100% effective`


Then try Kazam.


Or, if you just wanted to record and none of the advanced features, there's Kazam.


<@672892838995820553> How's homework going?


How are you so bad all of a sudden?


I also found this.


You didn't experience slowdowns when Steam was open so...


Try opening Steam.


I think so.


Since X11 is a server, you can use the desktop of another computer from across the internet!


On Linux, you don't need TeamViewer.


Let's see how well you would perform!


Anthony's switching to Linux for a week.


Make a first-person shooter in Metal.


And sometimes faster than even Direct3D 12 Ultimate.


Because Vulkan is faster than Direct3D 11.


Didn't it say how to do that?


You were using an older version of Wine.


Does `~/.wine/drive_c/Program Files/Steam` exist?


<@628672513345454122> Remember this?
https://www.reddit.com/r/geometrydash/comments/tailgg/running_mega_hack_v7_on_linux/


Sure, why not.


If there's already a default just use that.


It's the flag of his home town.


How about you?


Pretty good so far.


In other languages, you have to use hacks (such as `while True`) to make forever loops.


Also in Rust, the forever loop is built in.


In Rust, the `?` operator is replaced by `if` statements.


Let's create a 1:1 replica of Oakville.


Or rather, writing, since we never actually written anything?


So, we're now rewriting the SCP Engine in Rust?


<@672892838995820553> So, you're now officially a system developer.


Yeah, documentation is still a problem for C++.


(Yes, that's how you spell it).


So just download the ISO.


It's literally a Linux live USB that has nothing but GParted.


Maybe you should check out Geary instead?


No good reason to not do it right now.


Imagine not using `--autoremove`.


It automatically blocks images however.


However, it seems like a lot of people thinks otherwise.


I'm guessing that in the future most new programs will be written in Rust while C++ will be mainly used to maintain legacy code.


It will have some level of overheads since Rust isn't directly compatible with C (unlike C++), but I haven't tested it yet so...


At least not directly.


Win32 APIs are not callable from Rust.


Either way both languages are pretty much the same in my opinion, but Neng might find Rust easier to use since there's less bloat in the language.


Rust is a good language in general, but there's too much stuff still written in C++ that's too expensive to port onto Rust.


Spoiler alert: The answer is no.


If you know Rust, you will easily pick up C++, and vice versa.


Rust is basically just C++ but with all the criticisms addressed.


Either confirmation bias or untrue stereotype.


But most of the logic would be in Rust.


I'm still gonna use a little bit of C++ in the SCP Engine since some APIs only work with C/C++.


A reference is basically a pointer that you can't change but you can change the value that it points to.


When you want to obtain a reference to a variable.


At least I don't think you do.


Oh no you don't.


What do you mean "reference"?


Rust also runs on bare-metal.


No it won't.


What sounds terrifying?


Because it performs raw operations directly on transistors.


I actually learned Python before I even heard of C++.


In modern C++, it's discouraged to use raw pointers.


I'm using Mozilla Firefox.


Can't you move it to the left side and then resize it?


I'm still booting.


Nothing went wrong.


I have moved boot partitions before.


Okay, then find a way to move it.


Towards Windows, of course.


Then move it.


Unmount boot and move it.


Which partition is this?


Acer is now unmounted?


It's not in use.


Go into Windows and unmount from there?


They didn't bother updating it as often as they update their Windows version.


I don't think you can unmount the partition containing the home folder of a user that's logged in.


Oh yeah, you're logged in.


I guess so.


Which partition would you want to unmount?


Growing is just assigning more blocks to the partition.


Because shrinking can require moving files.


Because the partition is mounted.


Unlike some other Linux GUI apps.


Trust me that it doesn't suck.


It's a GUI for Snap and APT.


You also forgot about Discover.


If you wanted to.


I use those words to indicate that Python does not provide prebuilt binaries for Linux-based systems.


That's kind of what I meant by "Build from Source.".


What about Option 2 and 3?


.5 just has a few more patches than .4.


There are no feature differences.


Here are your options:
1. Try `sudo apt update && sudo apt upgrade` to see if there's any updates.
2. If 1. didn't work, annoy the Kubuntu packages people until they update the Python package.
3. If the Kubuntu packages people are all offline or they won't respond for some reasons, head to Python's website and build from source.


You don't need to.


C++ debugger on XCode... 😨


That's why I was confused.


Visual Studio 1998 didn't though.


They're developed by the same people.


Oh wait it supports Swift as well.


Wasn't XCode a C++ IDE?


Wardens are triggered by sound.


Because it's blind.


The only command blocks I used are for setting entities name's to FHDHGNGN.


I'm not even on the console.


Try this link: https://prod.liveshare.vsengsaas.visualstudio.com/join?6719A434C47F4C5091D211F3CEBEB32289FB


I know what macros in C/C++ are, but I doubt that they're the same thing in Rust.


Also, Firefox is written in Rust, I think.


So my knowledge of C++ will be helpful.


We're in this together.


It just happens to be popular on the server side.


Not just using it for scripting.


Like, the whole engine.


<@672892838995820553> I think I might write the SCP Engine in Rust.


Rust is preinstalled on Kubuntu?


It's meant to be C++'s successor.


Oh yeah, right.


I believe that those two languages have similar syntax.


<@672892838995820553> Learning Rust I see.


I don't think he made one.


<@628672513345454122> You're still after Neng?


The App Store downloads the latest version **that's compatible with your system**.


<@672892838995820553> Why are you not installing XCode from the App Store 💀


I wasn't watching most of the time so fill me in.


<@628672513345454122> How's the challenge going?


And board flipping is the only option.


Right now the only way to enable board flipping was to edit `options.txt` and restart the game.


Have you found out about the Pause menu that you can bring up by pressing "Escape"?


Wow, never noticed middle-click copy and paste.


Okay, it turns out I wasn't supposed to include a Linux kernel in an AppImage.


The entire Kubuntu operating system is only 10 GB.


<@672892838995820553> Okay, it turns out I wasn't supposed to include a Linux kernel in an AppImage.


You've figured a lot of things out yourself, so I'll let you figure out this one.


It's only on Chromium-based applications like Discord.


Windows has it system-wide?


There's an extension to get autoscroll on Linux.
https://chrome.google.com/webstore/detail/autoscroll/occjjkgifpmdgodlplnacmkejpdionan


Ask Neng to implement.


So, I guess this is the final phase of customization.


Why don't you autoremove them?


<@628672513345454122> Have you updated your software?


You can install other icons but not this one?


Qt is the library that KDE desktop and apps uses.


...because the previous one is still installing?


It's probably my favourite.


Just annoyingly slow.


So, not painfully slow.


Well, Dolphin's written in Python, so let's ask Neng to fix it for us.


I do. I just don't do it often.


<@672892838995820553> By the way, you should check out NeoFetch.


Green on Black resembles the Matrix.


Well, my computer didn't come with an operating system installed out of the box, so I had to download an OS anyways.


Since you can just go on a forum and ask any questions and someone will answer.


...is technically free.


Oh, you can?


Starting to look like Windows.


Oh, then what appears to be the problem?


Have you tried the development version of Wine?


Did you use the latest version of Wine?


Does it work?


I'm finally on.